{"version":3,"file":"goodstore.es6.umd.min.js","sources":["lib/CallerInternal.js","lib/CallerHandle.js","lib/DataStoreConsumable.js","lib/Dto/DataStoreRequestDto.js","lib/DataRow.js","lib/DataPage.js","lib/PageStore.js","lib/DataStore.js","lib/RequestConfig.js"],"sourcesContent":["import { Range2, Vec2 } from \"goodcore\";\r\nexport class CallerInternal {\r\n    constructor(config, stream) {\r\n        this._fixedLoadPort = new Range2();\r\n        this._fixedPxLoadPort = new Range2();\r\n        this.totalCells = new Vec2(-1, -1);\r\n        this.totalPx = new Vec2(-1, -1);\r\n        this._config = config;\r\n        this._stream = stream;\r\n        this.fetchSubscription = null;\r\n        this.ignoreFetch = -1;\r\n        this.requestId = -1;\r\n    }\r\n    get config() {\r\n        return this._config;\r\n    }\r\n    set config(v) {\r\n        this._config = v;\r\n    }\r\n    get stream() {\r\n        return this._stream;\r\n    }\r\n    get loadPort() {\r\n        return this.config.loadPort;\r\n    }\r\n    set loadPort(v) {\r\n        this.config.loadPort = v;\r\n    }\r\n    get pxLoadPort() {\r\n        return this.config.pxLoadPort;\r\n    }\r\n    set pxLoadPort(v) {\r\n        this.config.pxLoadPort = v;\r\n    }\r\n    get fixedLoadPort() {\r\n        return this._fixedLoadPort;\r\n    }\r\n    get fixedPxLoadPort() {\r\n        return this._fixedLoadPort;\r\n    }\r\n    get viewPort() {\r\n        return this.config.viewPort;\r\n    }\r\n    set viewPort(v) {\r\n        if (!this.config.viewPort.equals(v)) {\r\n            this.ignoreOngoingFetch();\r\n        }\r\n        this.config.viewPort = v;\r\n    }\r\n    get pxViewPort() {\r\n        return this.config.pxViewPort;\r\n    }\r\n    set pxViewPort(v) {\r\n        if (!this.config.pxViewPort.equals(v)) {\r\n            this.ignoreOngoingFetch();\r\n        }\r\n        this.config.pxViewPort = v;\r\n    }\r\n    fixLoadPort() {\r\n        if (this.config.pxLoadPort.isZero) {\r\n            this._fixedLoadPort.set(this.config.loadPort);\r\n            this._fixedPxLoadPort.zero();\r\n        }\r\n        else {\r\n            this._fixedPxLoadPort.set(this.config.pxLoadPort);\r\n            this._fixedLoadPort.zero();\r\n        }\r\n    }\r\n    ignoreOngoingFetch() {\r\n        if (this.fetchSubscription !== null) {\r\n            this.ignoreFetch = this.requestId;\r\n        }\r\n    }\r\n    cancelOngoingFetch() {\r\n        if (this.fetchSubscription !== null) {\r\n            this.fetchSubscription.unsubscribe();\r\n            this.fetchSubscription = null;\r\n        }\r\n    }\r\n    limitLoadPortByTotalCells() {\r\n        this.limitPortByTotal(this.loadPort, this.totalCells);\r\n    }\r\n    limitPxLoadPortByTotalPx() {\r\n        this.limitPortByTotal(this.pxLoadPort, this.totalPx);\r\n    }\r\n    limitPortByTotal(port, total) {\r\n        if (!port.isZero && !total.equals({ x: -1, y: -1 })) {\r\n            let overflow = port.toRect().stop.subtract(total).max(new Vec2(0, 0));\r\n            port.size.subtract(overflow);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=CallerInternal.js.map","import { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { CallerInternal } from \"./CallerInternal\";\r\nexport class CallerHandle {\r\n    constructor(id, store, config) {\r\n        this._force = false;\r\n        this._id = id;\r\n        this._store = store;\r\n        this._stream = new BehaviorSubject(null);\r\n        this._internal = new CallerInternal(config, this._stream);\r\n    }\r\n    get internal() {\r\n        return this._internal;\r\n    }\r\n    get stream() {\r\n        return this._stream;\r\n    }\r\n    get viewPort() {\r\n        return this._internal.viewPort;\r\n    }\r\n    set viewPort(v) {\r\n        this._internal.viewPort = v;\r\n    }\r\n    get pxViewPort() {\r\n        return this._internal.pxViewPort;\r\n    }\r\n    set pxViewPort(v) {\r\n        this._internal.pxViewPort = v;\r\n    }\r\n    get requestMargin() {\r\n        return this._internal.config.requestMargin;\r\n    }\r\n    set requestMargin(v) {\r\n        this._internal.config.requestMargin = v;\r\n    }\r\n    load(config) {\r\n        this.readConfig(config);\r\n        this._store.load(this.internal, this._force);\r\n    }\r\n    unregister() {\r\n        throw new Error(\"not implemented\");\r\n    }\r\n    readConfig(config) {\r\n        if (config !== undefined) {\r\n            if (config.requestMargin !== undefined) {\r\n                this.internal.config.requestMargin = config.requestMargin;\r\n            }\r\n            if (config.viewPort !== undefined) {\r\n                this.viewPort = config.viewPort;\r\n            }\r\n            if (config.pxViewPort !== undefined) {\r\n                this.pxViewPort = config.pxViewPort;\r\n            }\r\n            this._force = config.forceStream === true;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=CallerHandle.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Initable, Rect, Vec2 } from \"goodcore\";\r\nlet DataStoreConsumable = class DataStoreConsumable {\r\n    constructor() {\r\n        this.totalCells = new Vec2();\r\n        this.totalPx = new Vec2();\r\n        this.loadPort = null;\r\n        this.pxScope = new Rect();\r\n        this.rows = null;\r\n    }\r\n    init(obj) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n};\r\nDataStoreConsumable = __decorate([\r\n    Initable\r\n], DataStoreConsumable);\r\nexport { DataStoreConsumable };\r\n//# sourceMappingURL=DataStoreConsumable.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Initable } from \"goodcore\";\r\nlet DataStoreRequestDto = class DataStoreRequestDto {\r\n    init(obj) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n};\r\nDataStoreRequestDto = __decorate([\r\n    Initable\r\n], DataStoreRequestDto);\r\nexport { DataStoreRequestDto };\r\n//# sourceMappingURL=DataStoreRequestDto.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Initable, Poolable } from \"goodcore\";\r\nlet DataRow = class DataRow {\r\n    constructor(length = 0) {\r\n        this.i = 0;\r\n        this.h = 0;\r\n        this.d = null;\r\n        this.c = new Array(length);\r\n    }\r\n    init(obj) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    release() {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    initPool(pool) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n};\r\nDataRow = __decorate([\r\n    Poolable,\r\n    Initable,\r\n    __metadata(\"design:paramtypes\", [Number])\r\n], DataRow);\r\nexport { DataRow };\r\n//# sourceMappingURL=DataRow.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Initable, Poolable, Rect, Vec2 } from \"goodcore\";\r\nimport { DataRow } from \"./DataRow\";\r\nlet DataPage = class DataPage {\r\n    constructor() {\r\n        this._id = 0;\r\n        this._r = [];\r\n        this._pxScope = new Rect();\r\n        this._cellSize = new Vec2();\r\n        this._r = new Array();\r\n    }\r\n    release() {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    initPool(pool) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    set id(v) {\r\n        this._id = v;\r\n    }\r\n    get r() {\r\n        return this._r;\r\n    }\r\n    get pxScope() {\r\n        return this._pxScope;\r\n    }\r\n    set pxScope(v) {\r\n        this._pxScope.set(v);\r\n    }\r\n    get cellSize() {\r\n        return this._cellSize;\r\n    }\r\n    set cellSize(v) {\r\n        this._cellSize.set(v);\r\n        this.initData(v);\r\n    }\r\n    addRow() {\r\n        const result = new DataRow();\r\n        this._r.push(result);\r\n        return result;\r\n    }\r\n    initData(size) {\r\n        let i = -1;\r\n        if (this._r === undefined) {\r\n            this._r = [];\r\n        }\r\n        let r = this._r;\r\n        let j = r.length - 1;\r\n        let k = Math.min(j, size.y);\r\n        while (++j < size.y) {\r\n            r.push(new DataRow(size.x));\r\n        }\r\n        if (r.length !== size.y) {\r\n            r.length = size.y;\r\n        }\r\n        while (++i < k) {\r\n            r[i].c.length = size.x;\r\n        }\r\n    }\r\n};\r\nDataPage = __decorate([\r\n    Poolable,\r\n    Initable,\r\n    __metadata(\"design:paramtypes\", [])\r\n], DataPage);\r\nexport { DataPage };\r\n//# sourceMappingURL=DataPage.js.map","import { DataRow } from \"./DataRow\";\r\nimport { Arr, Dictionary, Pool, Range2, Rect, Util, Vec2 } from \"goodcore\";\r\nimport { DataPage } from \"./DataPage\";\r\nexport class PageStore {\r\n    constructor(pageSize, retainSize, pagePxRanges = null) {\r\n        this.isDebug = true;\r\n        this._usePx = true;\r\n        this._dummyRect = new Rect();\r\n        this._pagePool = new Pool(DataPage);\r\n        this._pageLookup = new Dictionary();\r\n        this._requestedPages = new Dictionary();\r\n        this._pageQueue = new Array();\r\n        this._cellsPerPage = new Vec2();\r\n        this._pagesPerCell = new Vec2();\r\n        this.setPageSize(pageSize);\r\n        this._retainSize = retainSize;\r\n        this._totalPages = new Vec2();\r\n        this._totalCells = new Vec2();\r\n        this._totalPx = new Vec2();\r\n        this._pagePxRanges = pagePxRanges;\r\n        this._usePx = pagePxRanges !== null;\r\n    }\r\n    get totalPx() {\r\n        return this._totalPx;\r\n    }\r\n    get totalCells() {\r\n        return this._totalCells;\r\n    }\r\n    get totalPages() {\r\n        return this._totalPages;\r\n    }\r\n    setPageSize(v) {\r\n        if (!this._cellsPerPage.equals(v)) {\r\n            this.emptyPageStore();\r\n        }\r\n        this._cellsPerPage.set(v);\r\n        this._pagesPerCell.x = 1 / v.x;\r\n        this._pagesPerCell.y = 1 / v.y;\r\n    }\r\n    isRequestedDataLoaded(caller) {\r\n        let result = false;\r\n        const hasLoadPort = !caller.loadPort.isZero;\r\n        const hasPxLoadPort = !caller.pxLoadPort.isZero;\r\n        if (hasLoadPort || hasPxLoadPort) {\r\n            const pages = hasLoadPort ?\r\n                this.cellRangeToPageRange(caller.loadPort) :\r\n                this.pxRangeToPageRange(caller.pxLoadPort);\r\n            result = pages.first((p) => !this._pageLookup.has(p.y * this._totalPages.x + p.x)) === null;\r\n        }\r\n        return result;\r\n    }\r\n    limitPagesToLoad(pageRange) {\r\n        const result = pageRange.clone();\r\n        const pages = pageRange.toRect();\r\n        let isNew = false;\r\n        for (let i = pages.start.y; i < pages.stop.y; i += 1) {\r\n            for (let j = pages.start.x; j < pages.stop.x; j += 1) {\r\n                if (!this._pageLookup.has(i * this._cellsPerPage.x + j)\r\n                    && !this._requestedPages.has(i * this._cellsPerPage.x + j)) {\r\n                    isNew = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (isNew) {\r\n                break;\r\n            }\r\n            result.pos.y += 1;\r\n            result.size.y -= 1;\r\n        }\r\n        isNew = false;\r\n        for (let i = pages.stop.y; i > pages.start.y; i -= 1) {\r\n            for (let j = pages.start.x; j < pages.stop.x; j += 1) {\r\n                if (!this._pageLookup.has(i * this._cellsPerPage.x + j)\r\n                    && !this._requestedPages.has(i * this._cellsPerPage.x + j)) {\r\n                    isNew = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (isNew) {\r\n                break;\r\n            }\r\n            result.size.y -= 1;\r\n        }\r\n        isNew = false;\r\n        for (let i = pages.start.x; i < pages.stop.x; i += 1) {\r\n            for (let j = pages.start.y; j < pages.stop.y; j += 1) {\r\n                if (!this._pageLookup.has(j * this._cellsPerPage.x + i)\r\n                    && !this._requestedPages.has(j * this._cellsPerPage.x + i)) {\r\n                    isNew = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (isNew) {\r\n                break;\r\n            }\r\n            result.pos.x += 1;\r\n            result.size.x -= 1;\r\n        }\r\n        isNew = false;\r\n        for (let i = pages.stop.x; i > pages.start.x; i -= 1) {\r\n            for (let j = pages.start.y; j < pages.stop.y; j += 1) {\r\n                if (!this._pageLookup.has(j * this._cellsPerPage.x + i)\r\n                    && !this._requestedPages.has(j * this._cellsPerPage.x + i)) {\r\n                    isNew = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (isNew) {\r\n                break;\r\n            }\r\n            result.size.x -= 1;\r\n        }\r\n        return result;\r\n    }\r\n    cellSpaceToPageSpaceX(v) {\r\n        return (v / this._cellsPerPage.x) | 0;\r\n    }\r\n    cellSpaceToPageSpaceY(v) {\r\n        return (v / this._cellsPerPage.y) | 0;\r\n    }\r\n    cellSpaceToInnerPageSpaceX(v) {\r\n        return v - (this._cellsPerPage.x * this.cellSpaceToPageSpaceX(v));\r\n    }\r\n    cellSpaceToInnerPageSpaceY(v) {\r\n        return v - (this._cellsPerPage.y * this.cellSpaceToPageSpaceY(v));\r\n    }\r\n    pxRangeToPageRange(pixels) {\r\n        Util.assert(!!this._pagePxRanges.x && !!this._pagePxRanges.y, \"pagePxRanges does not contain valid ranges\");\r\n        let x1 = pixels.pos.x;\r\n        let pageX1 = Arr.binarySearch(this._pagePxRanges.x, (el) => {\r\n            return (el.p + el.s <= x1) ? -1 :\r\n                (el.p > x1) ? 1 :\r\n                    0;\r\n        });\r\n        let y1 = pixels.pos.y;\r\n        let pageY1 = Arr.binarySearch(this._pagePxRanges.y, (el) => {\r\n            return (el.p + el.s <= y1) ? -1 :\r\n                (el.p > y1) ? 1 :\r\n                    0;\r\n        });\r\n        let x2 = pixels.pos.x + pixels.size.x - 1;\r\n        let pageX2 = Arr.binarySearch(this._pagePxRanges.x, (el) => {\r\n            return (el.p + el.s <= x2) ? -1 :\r\n                (el.p > x2) ? 1 :\r\n                    0;\r\n        });\r\n        let y2 = pixels.pos.y + pixels.size.y - 1;\r\n        let pageY2 = Arr.binarySearch(this._pagePxRanges.y, (el) => {\r\n            return (el.p + el.s <= y2) ? -1 :\r\n                (el.p > y2) ? 1 :\r\n                    0;\r\n        });\r\n        let pages = new Rect(pageX1, pageY1, pageX2, pageY2, true).toRange2();\r\n        return pages;\r\n    }\r\n    cellRangeToPageRange(cells) {\r\n        let pages = new Range2().set(cells);\r\n        const rect = pages.toRect(false, this._dummyRect).translate(this._pagesPerCell);\r\n        rect.start.toInt();\r\n        rect.stop.ceil();\r\n        rect.toRange2(pages);\r\n        return pages;\r\n    }\r\n    pageRangeToCellRange(pages) {\r\n        return (new Range2()).set(pages).translate(this._cellsPerPage).toInt();\r\n    }\r\n    pxRangeToCellRange(pixels) {\r\n        const pageRange = this.pxRangeToPageRange(pixels);\r\n        const pages = this.getDataPagesForPageRange(pageRange);\r\n        let pos = pages[0].pxScope.start.clone();\r\n        let indexX1 = 0;\r\n        Arr.until(pages[0].r[0].c, (el, i) => pixels.pos.x < pos.x + el.w, (el, i) => { pos.x += el.w; ++indexX1; });\r\n        let indexY1 = 0;\r\n        Arr.until(pages[0].r, (el, i) => pixels.pos.y < pos.y + el.h, (el, i) => { pos.y += el.h; ++indexY1; });\r\n        pos = pages[pages.length - 1].pxScope.start.clone();\r\n        let indexX2 = 0;\r\n        Arr.until(pages[pages.length - 1].r[0].c, (el, i) => pixels.pos.x + pixels.size.x - 1 < pos.x + el.w, (el, i) => { pos.x += el.w; ++indexX2; });\r\n        let indexY2 = 0;\r\n        Arr.until(pages[pages.length - 1].r, (el, i) => pixels.pos.y + pixels.size.y - 1 < pos.y + el.h, (el, i) => { pos.y += el.h; ++indexY2; });\r\n        let start = pages[0].r[indexY1].c[indexX1].i;\r\n        let stop = pages[pages.length - 1].r[indexY2].c[indexX2].i;\r\n        let result = new Rect(start.x, start.y, stop.x, stop.y, true).toRange2();\r\n        return result;\r\n    }\r\n    addDataToPageStore(callers, payload) {\r\n        const pages = this.partitionDataIntoPages(payload.r, payload.dataPort, payload.pxScope);\r\n        pages.forEach((p) => this.insertPage(p));\r\n        this.cleanPageStore(callers);\r\n    }\r\n    readPropertiesFromResponse(payload) {\r\n        if (!this._totalCells.equals(payload.totalCells)) {\r\n            this._totalPages.set(payload.totalCells).scale(this._pagesPerCell);\r\n            this._totalCells.set(payload.totalCells);\r\n            if (this._usePx) {\r\n                this._totalPx.set(payload.totalPx);\r\n            }\r\n        }\r\n    }\r\n    emptyPageStore() {\r\n        while (this._pageQueue.length > 0) {\r\n            this.shiftPageQueue();\r\n        }\r\n    }\r\n    cleanPageStore(callers) {\r\n        let locked = this.calculateLockedPages(callers);\r\n        let retainCount = Math.max(this._retainSize, locked.list.count);\r\n        Arr.reverse(this._pageQueue);\r\n        Arr.reverseUntil(this._pageQueue, (el, i) => this._pageQueue.length <= retainCount, (el, i) => {\r\n            if (!locked.has(\"\" + this._pageQueue[i].id)) {\r\n                this.removePageFromQueue(this._pageQueue[i]);\r\n            }\r\n        });\r\n        Arr.reverse(this._pageQueue);\r\n    }\r\n    removePageFromQueue(page) {\r\n        Arr.remove(this._pageQueue, page);\r\n        this.deletePageById(page.id);\r\n        page.release();\r\n    }\r\n    shiftPageQueue() {\r\n        const toRemove = this._pageQueue.shift();\r\n        this.deletePageById(toRemove.id);\r\n        toRemove.release();\r\n    }\r\n    deletePageById(pageId) {\r\n        const exists = this._pageLookup.has(pageId);\r\n        if (exists) {\r\n            this._pageLookup.delete(pageId);\r\n        }\r\n    }\r\n    partitionDataIntoPages(data, cellPort, pxScope) {\r\n        const pageRect = this.cellRangeToPageRange(cellPort).toRect();\r\n        const result = new Array();\r\n        let pageCountY = 0;\r\n        for (let pageY = pageRect.start.y; pageY < pageRect.stop.y; ++pageY) {\r\n            let pageCountX = 0;\r\n            for (let pageX = pageRect.start.x; pageX < pageRect.stop.x; ++pageX) {\r\n                const id = (pageY * this._totalPages.x) + pageX;\r\n                const isNewPage = !this._pageLookup.has(id);\r\n                if (isNewPage) {\r\n                    const dataPage = this._pagePool.get();\r\n                    dataPage.id = id;\r\n                    dataPage.cellSize = this._cellsPerPage;\r\n                    if (this._usePx) {\r\n                        let pagePxX = this._pagePxRanges.x[pageX];\r\n                        let pagePxY = this._pagePxRanges.y[pageY];\r\n                        let pagePxScope = dataPage.pxScope;\r\n                        pagePxScope.start.x = pagePxX.p;\r\n                        pagePxScope.start.y = pagePxY.p;\r\n                        pagePxScope.stop.x = pagePxX.p + pagePxX.s - 1;\r\n                        pagePxScope.stop.y = pagePxY.p + pagePxY.s - 1;\r\n                    }\r\n                    result.push(dataPage);\r\n                    const dataStartY = pageCountY * this._cellsPerPage.y;\r\n                    const dataStartX = pageCountX * this._cellsPerPage.x;\r\n                    const dataLimitY = dataStartY + this._cellsPerPage.y;\r\n                    const dataLimitX = dataStartX + this._cellsPerPage.x;\r\n                    let pageRowNum = 0;\r\n                    for (let i = dataStartY; i < dataLimitY && i < data.length; ++i) {\r\n                        const row = data[i];\r\n                        const pageRow = dataPage.r[pageRowNum];\r\n                        pageRow.h = row.h;\r\n                        pageRow.i = row.i;\r\n                        pageRow.d = row.d;\r\n                        let pageColNum = 0;\r\n                        for (let j = dataStartX; j < dataLimitX && j < row.c.length; ++j) {\r\n                            pageRow.c[pageColNum] = row.c[j];\r\n                            ++pageColNum;\r\n                        }\r\n                        ++pageRowNum;\r\n                    }\r\n                }\r\n                ++pageCountX;\r\n            }\r\n            ++pageCountY;\r\n        }\r\n        return result;\r\n    }\r\n    insertPage(page) {\r\n        const isNew = !this._pageLookup.has(page.id);\r\n        if (!isNew) {\r\n            Arr.removeOneByFn(this._pageQueue, function (el) {\r\n                return el.id === page.id;\r\n            });\r\n        }\r\n        this._pageQueue.push(page);\r\n        this._pageLookup.set(page.id, page);\r\n    }\r\n    calculateLockedPages(callers) {\r\n        let unique = new Dictionary();\r\n        Arr.forEach(Arr.flatten(Arr.map(callers, (caller) => {\r\n            return this.getPageIdsForViewPort(caller.loadPort);\r\n        })), (id) => unique.set(id, id));\r\n        return unique;\r\n    }\r\n    assembleDataFromPages(caller) {\r\n        const result = new Array();\r\n        let loadPort = this.getLoadPort(caller);\r\n        Util.loop(loadPort.size.y, (i) => result.push(new DataRow(loadPort.size.x)));\r\n        const dataPages = this.getDataPages(caller);\r\n        const loadRect = loadPort.toRect();\r\n        const pageRange = this.cellRangeToPageRange(loadPort);\r\n        const viewSpace = new Vec2();\r\n        const modelSpace = new Vec2();\r\n        const pageSpace = new Vec2();\r\n        const innerPageSpace = new Vec2();\r\n        let dataPageNum;\r\n        const modelRowCount = result.length;\r\n        const modelColCount = result[0] === undefined ? 0 : result[0].c.length;\r\n        const relativePageSpace = new Vec2();\r\n        for (viewSpace.y = loadRect.start.y; viewSpace.y < loadRect.stop.y && modelSpace.y < modelRowCount; viewSpace.y += 1, modelSpace.y += 1) {\r\n            pageSpace.y = this.cellSpaceToPageSpaceY(viewSpace.y);\r\n            modelSpace.x = 0;\r\n            innerPageSpace.y = this.cellSpaceToInnerPageSpaceY(viewSpace.y);\r\n            relativePageSpace.set(pageSpace).subtract(pageRange.pos);\r\n            dataPageNum = relativePageSpace.y * pageRange.size.x + relativePageSpace.x;\r\n            let rowInfo = dataPages[dataPageNum].r[innerPageSpace.y];\r\n            result[modelSpace.y].init({ i: rowInfo.i, h: rowInfo.h, d: rowInfo.d });\r\n            for (viewSpace.x = loadRect.start.x; viewSpace.x < loadRect.stop.x && modelSpace.x < modelColCount; viewSpace.x += 1, modelSpace.x += 1) {\r\n                pageSpace.x = this.cellSpaceToPageSpaceX(viewSpace.x);\r\n                innerPageSpace.x = this.cellSpaceToInnerPageSpaceX(viewSpace.x);\r\n                innerPageSpace.y = this.cellSpaceToInnerPageSpaceY(viewSpace.y);\r\n                relativePageSpace.set(pageSpace).subtract(pageRange.pos);\r\n                dataPageNum = relativePageSpace.y * pageRange.size.x + relativePageSpace.x;\r\n                result[modelSpace.y].c[modelSpace.x] = dataPages[dataPageNum].r[innerPageSpace.y].c[innerPageSpace.x];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    getPageIdsForViewPort(viewPort) {\r\n        const pages = this.cellRangeToPageRange(viewPort);\r\n        const result = [];\r\n        pages.forEach((p) => {\r\n            const pos = p.y * this._cellsPerPage.x + p.x;\r\n            if (this._pageLookup.has(pos)) {\r\n                result.push(this._pageLookup.get(pos).id);\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    getLoadPort(caller) {\r\n        let byCells = !caller.loadPort.isZero;\r\n        return byCells ?\r\n            caller.loadPort :\r\n            this.pxRangeToCellRange(caller.pxLoadPort);\r\n    }\r\n    getDataPages(caller) {\r\n        let byCells = !caller.loadPort.isZero;\r\n        return byCells ?\r\n            this.getDataPagesForCellPort(caller.loadPort) :\r\n            this.getDataPagesForPxPort(caller.pxLoadPort);\r\n    }\r\n    getDataPagesForCellPort(port) {\r\n        const pages = this.cellRangeToPageRange(port);\r\n        return this.getDataPagesForPageRange(pages);\r\n    }\r\n    getDataPagesForPxPort(port) {\r\n        const pages = this.pxRangeToPageRange(port);\r\n        return this.getDataPagesForPageRange(pages);\r\n    }\r\n    getDataPagesForPageRange(pages) {\r\n        const result = new Array();\r\n        pages.forEach((p) => {\r\n            const pos = p.y * this._totalPages.x + p.x;\r\n            if (this._pageLookup.has(pos)) {\r\n                result.push(this._pageLookup.get(pos));\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n}\r\n//# sourceMappingURL=PageStore.js.map","import { Arr, Rect, Test, Util, Vec2 } from \"goodcore\";\r\nimport { CallerHandle } from \"./CallerHandle\";\r\nimport { DataStoreConsumable } from \"./DataStoreConsumable\";\r\nimport { DataStoreRequestDto } from \"./Dto/DataStoreRequestDto\";\r\nimport { PageStore } from \"./PageStore\";\r\nexport class DataStore {\r\n    constructor(config) {\r\n        this.isDebug = true;\r\n        this._id = Util.newUUID();\r\n        this._usePx = true;\r\n        this._requestCounter = 0;\r\n        this._handleCounter = 0;\r\n        this._callers = [];\r\n        this._pageStore = null;\r\n        this._endPointFn = config.endPointFn ? config.endPointFn : DataStore.DEFAULT_CONFIG.endPointFn;\r\n        this._pageStore = new PageStore(config.pageSize || DataStore.DEFAULT_CONFIG.pageSize, config.retainSize ? config.retainSize : DataStore.DEFAULT_CONFIG.retainSize, config.pagePxRanges);\r\n    }\r\n    load(caller, force = false) {\r\n        Util.assert(Test.isFunction(this._endPointFn), \"EndPoint is valid function\", this.isDebug);\r\n        Util.assert(caller.viewPort !== undefined, \"ViewPort is defined\", this.isDebug);\r\n        if (this.loadPortHasChanged(caller) || force) {\r\n            caller.limitLoadPortByTotalCells();\r\n            caller.limitPxLoadPortByTotalPx();\r\n            if (this._pageStore.isRequestedDataLoaded(caller)) {\r\n                this.addDataToStream(caller, force);\r\n                this._pageStore.cleanPageStore(this._callers);\r\n            }\r\n            else {\r\n                caller.fetchSubscription = this.fetchData(caller).subscribe((value) => {\r\n                    if (!Util.assert(value !== undefined, \"Payload from server was empty in DataStore.load()\", this.isDebug)) {\r\n                        return;\r\n                    }\r\n                    this.readPropertiesFromResponse(caller, value);\r\n                    caller.limitLoadPortByTotalCells();\r\n                    caller.limitPxLoadPortByTotalPx();\r\n                    this._pageStore.addDataToPageStore(this._callers, value);\r\n                    if (caller.ignoreFetch < caller.requestId) {\r\n                        this.addDataToStream(caller, force);\r\n                    }\r\n                }, (error) => {\r\n                    caller.cancelOngoingFetch();\r\n                    this.onDataFail(caller, error);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    loadPortHasChanged(caller) {\r\n        const loadPort = caller.loadPort;\r\n        const pxLoadPort = caller.pxLoadPort;\r\n        return (!loadPort.isZero && !loadPort.equals(caller.fixedLoadPort)) ||\r\n            (!pxLoadPort.isZero && !pxLoadPort.equals(caller.fixedPxLoadPort));\r\n    }\r\n    readPropertiesFromResponse(caller, value) {\r\n        caller.totalCells = new Vec2().set(value.totalCells);\r\n        this._usePx = !!value.pxScope;\r\n        if (this._usePx) {\r\n            caller.totalPx.set(value.totalPx);\r\n        }\r\n        if (value.cellsPerPage) {\r\n            this._pageStore.setPageSize(value.cellsPerPage);\r\n        }\r\n        this._pageStore.readPropertiesFromResponse(value);\r\n    }\r\n    register(config) {\r\n        const result = new CallerHandle(this._handleCounter, this, config);\r\n        this._handleCounter += 1;\r\n        this._callers.push(result.internal);\r\n        return result;\r\n    }\r\n    fetchData(caller) {\r\n        const dto = this.createRequestDTO(caller);\r\n        caller.requestId = this._requestCounter;\r\n        let data;\r\n        caller.cancelOngoingFetch();\r\n        return this._endPointFn(dto);\r\n    }\r\n    createRequestDTO(caller) {\r\n        let pxRequest = null;\r\n        let cellRequest = null;\r\n        let pageRequest = null;\r\n        if (!caller.pxViewPort.isZero) {\r\n            pageRequest = this._pageStore.pxRangeToPageRange(caller.pxLoadPort);\r\n        }\r\n        else {\r\n            pageRequest = this._pageStore.cellRangeToPageRange(caller.loadPort);\r\n        }\r\n        pageRequest = this._pageStore.limitPagesToLoad(pageRequest);\r\n        cellRequest = this._pageStore.pageRangeToCellRange(pageRequest);\r\n        const result = new DataStoreRequestDto().init({\r\n            sourceId: this._id,\r\n            requestId: this._requestCounter,\r\n            cellRequest\r\n        });\r\n        this._requestCounter += 1;\r\n        return result;\r\n    }\r\n    onDataFail(caller, reason) {\r\n        throw new Error(\"Not Implemented\");\r\n    }\r\n    addDataToStream(caller, force = false) {\r\n        if (!this.viewPortIsAlreadyStreamed(caller) || force) {\r\n            caller.fixLoadPort();\r\n            const loadPort = this._pageStore.getLoadPort(caller);\r\n            const rows = this._pageStore.assembleDataFromPages(caller);\r\n            let pxScope = null;\r\n            if (this._usePx) {\r\n                pxScope = this.calculatePxRangeFromCellRange(loadPort);\r\n            }\r\n            let result = new DataStoreConsumable();\r\n            result.init({ totalCells: this._pageStore.totalCells, totalPx: this._pageStore.totalPx, loadPort, rows, pxScope });\r\n            caller.stream.next(result);\r\n        }\r\n    }\r\n    viewPortIsAlreadyStreamed(caller) {\r\n        return (!caller.viewPort.isZero && caller.fixedLoadPort.contains(caller.viewPort)) ||\r\n            (!caller.pxViewPort.isZero && caller.fixedPxLoadPort.contains(caller.pxViewPort));\r\n    }\r\n    calculatePxRangeFromCellRange(loadPort) {\r\n        let result = new Rect();\r\n        const dataPages = this._pageStore.getDataPagesForCellPort(loadPort);\r\n        const loadRect = loadPort.toRect();\r\n        let startPx = dataPages[0].pxScope.start.clone();\r\n        let stopPx = dataPages[dataPages.length - 1].pxScope.stop.clone();\r\n        let leftIndex = dataPages[0].r[0].c[0].i.x;\r\n        let rightIndex = dataPages[0].r[0].c[dataPages[0].r[0].c.length - 1].i.x;\r\n        let topIndex = dataPages[0].r[0].i;\r\n        let bottomIndex = dataPages[dataPages.length - 1].r[dataPages[dataPages.length - 1].r.length - 1].i;\r\n        let cells = Arr.shallowCopy(dataPages[0].r[0].c);\r\n        Arr.until(cells, (cell, i) => i + leftIndex >= loadRect.start.x, (cell, i) => startPx.x += cell.w);\r\n        Arr.reverse(cells);\r\n        Arr.until(cells, (cell, i) => rightIndex - i >= loadRect.start.x, (cell, i) => stopPx.x -= cell.w);\r\n        let rows = Arr.shallowCopy(dataPages[0].r);\r\n        Arr.until(rows, (row, i) => i + topIndex >= loadRect.start.y, (row, i) => startPx.y += row.h);\r\n        Arr.reverse(rows);\r\n        Arr.until(rows, (row, i) => rightIndex - i >= loadRect.start.y, (row, i) => stopPx.y -= row.h);\r\n        result.start = startPx;\r\n        result.stop = stopPx;\r\n        return result;\r\n    }\r\n}\r\nDataStore.DEFAULT_CONFIG = {\r\n    pageSize: new Vec2(10, 10),\r\n    retainSize: 10,\r\n    endPointFn: null\r\n};\r\n//# sourceMappingURL=DataStore.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Initable, Range2, Vec2 } from \"goodcore\";\r\nlet RequestConfig = class RequestConfig {\r\n    constructor() {\r\n        this._viewPort = new Range2();\r\n        this._pxViewPort = new Range2();\r\n        this._requestMargin = new Vec2(0, 0);\r\n        this._loadPort = new Range2();\r\n        this._pxLoadPort = new Range2();\r\n        this._pxRequestMargin = new Vec2(0, 0);\r\n    }\r\n    init(obj) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    get viewPort() {\r\n        return this._viewPort;\r\n    }\r\n    set viewPort(v) {\r\n        this._viewPort.set(v);\r\n        this._loadPort = this.calculateLoadPort(this._viewPort, this._requestMargin);\r\n        this._pxViewPort.zero();\r\n        this._pxLoadPort.zero();\r\n    }\r\n    get requestMargin() {\r\n        return this._requestMargin;\r\n    }\r\n    set requestMargin(v) {\r\n        this._requestMargin.set(v);\r\n        this._loadPort = this.calculateLoadPort(this._viewPort, this._requestMargin);\r\n    }\r\n    get pxViewPort() {\r\n        return this._pxViewPort;\r\n    }\r\n    set pxViewPort(v) {\r\n        this._pxViewPort.set(v);\r\n        this._pxLoadPort = this.calculateLoadPort(this._pxViewPort, this._pxRequestMargin);\r\n        this._viewPort.zero();\r\n        this._loadPort.zero();\r\n    }\r\n    get pxRequestMargin() {\r\n        return this._pxRequestMargin;\r\n    }\r\n    set pxRequestMargin(v) {\r\n        this._pxRequestMargin.set(v);\r\n        this._pxLoadPort = this.calculateLoadPort(this._pxViewPort, this._pxRequestMargin);\r\n    }\r\n    get loadPort() {\r\n        return this._loadPort;\r\n    }\r\n    set loadPort(v) {\r\n        this._loadPort.set(v);\r\n        this._pxLoadPort.zero();\r\n    }\r\n    get pxLoadPort() {\r\n        return this._pxLoadPort;\r\n    }\r\n    set pxLoadPort(v) {\r\n        this._pxLoadPort.set(v);\r\n        this._loadPort.zero();\r\n    }\r\n    calculateLoadPort(viewPort, requestMargin) {\r\n        let result = viewPort.clone();\r\n        result.pos.subtract(requestMargin);\r\n        result.size.add(requestMargin.clone().multiply(2));\r\n        let underflow = result.pos.clone().invert().max({ x: 0, y: 0 });\r\n        result.pos.add(underflow);\r\n        result.size.subtract(underflow);\r\n        return result;\r\n    }\r\n};\r\nRequestConfig = __decorate([\r\n    Initable\r\n], RequestConfig);\r\nexport { RequestConfig };\r\n//# sourceMappingURL=RequestConfig.js.map"],"names":["CallerInternal","[object Object]","config","stream","this","_fixedLoadPort","Range2","_fixedPxLoadPort","totalCells","Vec2","totalPx","_config","_stream","fetchSubscription","ignoreFetch","requestId","v","loadPort","pxLoadPort","fixedLoadPort","fixedPxLoadPort","viewPort","equals","ignoreOngoingFetch","pxViewPort","isZero","set","zero","unsubscribe","limitPortByTotal","port","total","x","y","overflow","toRect","stop","subtract","max","size","CallerHandle","id","store","_force","_id","_store","BehaviorSubject","_internal","internal","requestMargin","readConfig","load","Error","undefined","forceStream","__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","exports","pxScope","Rect","rows","obj","DataStoreConsumable","Initable","DataStoreRequestDto","__metadata","k","metadata","DataRow","h","Array","pool","Poolable","Number","DataPage","_r","_pxScope","_cellSize","cellSize","initData","result","push","j","Math","min","PageStore","pageSize","retainSize","pagePxRanges","isDebug","_usePx","_dummyRect","_pagePool","Pool","_pageLookup","Dictionary","_requestedPages","_pageQueue","_cellsPerPage","_pagesPerCell","setPageSize","_retainSize","_totalPages","_totalCells","_totalPx","_pagePxRanges","totalPages","emptyPageStore","caller","hasLoadPort","hasPxLoadPort","cellRangeToPageRange","pxRangeToPageRange","first","p","has","pageRange","clone","pages","isNew","start","pos","cellSpaceToPageSpaceX","cellSpaceToPageSpaceY","pixels","Util","assert","x1","pageX1","Arr","binarySearch","el","s","y1","pageY1","x2","pageX2","y2","pageY2","toRange2","cells","rect","translate","toInt","ceil","getDataPagesForPageRange","indexX1","until","w","indexY1","indexX2","indexY2","callers","payload","partitionDataIntoPages","dataPort","forEach","insertPage","cleanPageStore","scale","shiftPageQueue","locked","calculateLockedPages","retainCount","list","count","reverse","reverseUntil","removePageFromQueue","page","remove","deletePageById","release","toRemove","shift","pageId","delete","data","cellPort","pageRect","pageCountY","pageY","pageCountX","pageX","dataPage","get","pagePxX","pagePxY","pagePxScope","dataStartY","dataStartX","dataLimitY","dataLimitX","pageRowNum","row","pageRow","pageColNum","removeOneByFn","unique","flatten","map","getPageIdsForViewPort","getLoadPort","loop","dataPages","getDataPages","loadRect","viewSpace","modelSpace","pageSpace","innerPageSpace","dataPageNum","modelRowCount","modelColCount","relativePageSpace","cellSpaceToInnerPageSpaceY","rowInfo","init","cellSpaceToInnerPageSpaceX","pxRangeToCellRange","getDataPagesForCellPort","getDataPagesForPxPort","DataStore","newUUID","_requestCounter","_handleCounter","_callers","_pageStore","_endPointFn","endPointFn","DEFAULT_CONFIG","force","Test","isFunction","loadPortHasChanged","limitLoadPortByTotalCells","limitPxLoadPortByTotalPx","isRequestedDataLoaded","addDataToStream","fetchData","subscribe","value","readPropertiesFromResponse","addDataToPageStore","error","cancelOngoingFetch","onDataFail","cellsPerPage","dto","createRequestDTO","cellRequest","pageRequest","limitPagesToLoad","pageRangeToCellRange","sourceId","reason","viewPortIsAlreadyStreamed","fixLoadPort","assembleDataFromPages","calculatePxRangeFromCellRange","next","contains","startPx","stopPx","leftIndex","rightIndex","topIndex","shallowCopy","cell","_viewPort","_pxViewPort","_requestMargin","_loadPort","_pxLoadPort","_pxRequestMargin","calculateLoadPort","pxRequestMargin","add","multiply","underflow","invert","RequestConfig"],"mappings":"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"}