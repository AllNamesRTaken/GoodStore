{"version":3,"file":"goodstore.es6.umd.min.js","sources":["lib/CallerInternal.js","lib/CallerHandle.js","lib/DataStoreConsumable.js","lib/Dto/DataStoreRequestDto.js","lib/DataRow.js","lib/DataPage.js","lib/PageStore.js","lib/DataStore.js","lib/RequestConfig.js"],"sourcesContent":["import { Rect, Range2, Vec2 } from \"goodcore\";\nexport class CallerInternal {\n    constructor(config, stream) {\n        this._fixedLoadPort = new Range2();\n        this._fixedPxLoadPort = new Range2();\n        this.totalCells = new Vec2(-1, -1);\n        this.totalPx = new Vec2(-1, -1);\n        this._config = config;\n        this._stream = stream;\n        this.fetchSubscription = null;\n        this.ignoreFetch = -1;\n        this.requestId = -1;\n    }\n    get config() {\n        return this._config;\n    }\n    set config(v) {\n        this._config = v;\n    }\n    get stream() {\n        return this._stream;\n    }\n    get loadPort() {\n        return this.config.loadPort;\n    }\n    set loadPort(v) {\n        this.config.loadPort = v;\n    }\n    get pxLoadPort() {\n        return this.config.pxLoadPort;\n    }\n    set pxLoadPort(v) {\n        this.config.pxLoadPort = v;\n    }\n    get fixedLoadPort() {\n        return this._fixedLoadPort;\n    }\n    get fixedPxLoadPort() {\n        return this._fixedLoadPort;\n    }\n    get viewPort() {\n        return this.config.viewPort;\n    }\n    set viewPort(v) {\n        if (!this.config.viewPort.equals(v)) {\n            this.ignoreOngoingFetch();\n        }\n        this.config.viewPort = v;\n    }\n    get pxViewPort() {\n        return this.config.pxViewPort;\n    }\n    set pxViewPort(v) {\n        if (!this.config.pxViewPort.equals(v)) {\n            this.ignoreOngoingFetch();\n        }\n        this.config.pxViewPort = v;\n    }\n    fixLoadPort() {\n        if (this.config.pxLoadPort.isZero) {\n            this._fixedLoadPort.set(this.config.loadPort);\n            this._fixedPxLoadPort.zero();\n        }\n        else {\n            this._fixedPxLoadPort.set(this.config.pxLoadPort);\n            this._fixedLoadPort.zero();\n        }\n    }\n    ignoreOngoingFetch() {\n        if (this.fetchSubscription !== null) {\n            this.ignoreFetch = this.requestId;\n        }\n    }\n    cancelOngoingFetch() {\n        if (this.fetchSubscription !== null) {\n            this.fetchSubscription.unsubscribe();\n            this.fetchSubscription = null;\n        }\n    }\n    limitLoadPortByTotalCells() {\n        this.limitPortByTotal(this.loadPort, this.totalCells);\n    }\n    limitPxLoadPortByTotalPx() {\n        this.limitPortByTotal(this.pxLoadPort, this.totalPx);\n    }\n    limitPortByTotal(port, total) {\n        if (!port.isZero && !total.equals({ x: -1, y: -1 })) {\n            let overflow = new Rect().fromRange2(port).stop.subtract(total).max(new Vec2(0, 0));\n            port.size.subtract(overflow);\n        }\n    }\n}\n//# sourceMappingURL=CallerInternal.js.map","import { BehaviorSubject } from \"rxjs/BehaviorSubject\";\nimport { CallerInternal } from \"./CallerInternal\";\nexport class CallerHandle {\n    constructor(id, store, config) {\n        this._force = false;\n        this._id = id;\n        this._store = store;\n        this._stream = new BehaviorSubject(null);\n        this._internal = new CallerInternal(config, this._stream);\n    }\n    get internal() {\n        return this._internal;\n    }\n    get stream() {\n        return this._stream;\n    }\n    get viewPort() {\n        return this._internal.viewPort;\n    }\n    set viewPort(v) {\n        this._internal.viewPort = v;\n    }\n    get pxViewPort() {\n        return this._internal.pxViewPort;\n    }\n    set pxViewPort(v) {\n        this._internal.pxViewPort = v;\n    }\n    get requestMargin() {\n        return this._internal.config.requestMargin;\n    }\n    set requestMargin(v) {\n        this._internal.config.requestMargin = v;\n    }\n    load(config) {\n        this.readConfig(config);\n        this._store.load(this.internal, this._force);\n    }\n    unregister() {\n        throw new Error(\"not implemented\");\n    }\n    readConfig(config) {\n        if (config !== undefined) {\n            if (config.requestMargin !== undefined) {\n                this.internal.config.requestMargin = config.requestMargin;\n            }\n            if (config.viewPort !== undefined) {\n                this.viewPort = config.viewPort;\n            }\n            if (config.pxViewPort !== undefined) {\n                this.pxViewPort = config.pxViewPort;\n            }\n            this._force = config.forceStream === true;\n        }\n    }\n}\n//# sourceMappingURL=CallerHandle.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Initable, Rect, Vec2 } from \"goodcore\";\nlet DataStoreConsumable = class DataStoreConsumable {\n    constructor() {\n        this.totalCells = new Vec2();\n        this.totalPx = new Vec2();\n        this.loadPort = null;\n        this.pxScope = new Rect();\n        this.rows = null;\n    }\n    init(obj, mapping) {\n        throw new Error(\"Method not implemented.\");\n    }\n};\nDataStoreConsumable = __decorate([\n    Initable\n], DataStoreConsumable);\nexport { DataStoreConsumable };\n//# sourceMappingURL=DataStoreConsumable.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Initable } from \"goodcore\";\nlet DataStoreRequestDto = class DataStoreRequestDto {\n    constructor() {\n        this.sourceId = \"\";\n        this.requestId = 0;\n        this.cellRequest = null;\n    }\n    init(obj, mapping) {\n        throw new Error(\"Method not implemented.\");\n    }\n};\nDataStoreRequestDto = __decorate([\n    Initable\n], DataStoreRequestDto);\nexport { DataStoreRequestDto };\n//# sourceMappingURL=DataStoreRequestDto.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Initable, Poolable } from \"goodcore\";\nlet DataRow = class DataRow {\n    constructor(length = 0) {\n        this.i = 0;\n        this.h = 0;\n        this.d = null;\n        this.c = new Array(length);\n    }\n    release() {\n        throw new Error(\"Method not implemented.\");\n    }\n    initPool(pool) {\n        throw new Error(\"Method not implemented.\");\n    }\n    init(obj, mapping) {\n        throw new Error(\"Method not implemented.\");\n    }\n};\nDataRow = __decorate([\n    Poolable,\n    Initable,\n    __metadata(\"design:paramtypes\", [Number])\n], DataRow);\nexport { DataRow };\n//# sourceMappingURL=DataRow.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Initable, Poolable, Rect, Vec2 } from \"goodcore\";\nimport { DataRow } from \"./DataRow\";\nlet DataPage = class DataPage {\n    constructor() {\n        this._id = 0;\n        this._r = [];\n        this._pxScope = new Rect();\n        this._cellSize = new Vec2();\n        this._r = new Array();\n    }\n    init(obj, mapping) {\n        throw new Error(\"Method not implemented.\");\n    }\n    release() {\n        throw new Error(\"Method not implemented.\");\n    }\n    initPool(pool) {\n        throw new Error(\"Method not implemented.\");\n    }\n    get id() {\n        return this._id;\n    }\n    set id(v) {\n        this._id = v;\n    }\n    get r() {\n        return this._r;\n    }\n    get pxScope() {\n        return this._pxScope;\n    }\n    set pxScope(v) {\n        this._pxScope.set(v);\n    }\n    get cellSize() {\n        return this._cellSize;\n    }\n    set cellSize(v) {\n        this._cellSize.set(v);\n        this.initData(v);\n    }\n    addRow() {\n        const result = new DataRow();\n        this._r.push(result);\n        return result;\n    }\n    initData(size) {\n        let i = -1;\n        if (this._r === undefined) {\n            this._r = [];\n        }\n        let r = this._r;\n        let j = r.length - 1;\n        let k = Math.min(j, size.y);\n        while (++j < size.y) {\n            r.push(new DataRow(size.x));\n        }\n        if (r.length !== size.y) {\n            r.length = size.y;\n        }\n        while (++i < k) {\n            r[i].c.length = size.x;\n        }\n    }\n};\nDataPage = __decorate([\n    Poolable,\n    Initable,\n    __metadata(\"design:paramtypes\", [])\n], DataPage);\nexport { DataPage };\n//# sourceMappingURL=DataPage.js.map","import { DataRow } from \"./DataRow\";\nimport { Arr, Dictionary, Pool, Range2, Rect, Util, Vec2 } from \"goodcore\";\nimport { DataPage } from \"./DataPage\";\nexport class PageStore {\n    constructor(pageSize, retainSize, pagePxRanges = null) {\n        this.isDebug = true;\n        this._usePx = true;\n        this._dummyRect = new Rect();\n        this._pagePool = new Pool(DataPage);\n        this._pageLookup = new Dictionary();\n        this._requestedPages = new Dictionary();\n        this._pageQueue = new Array();\n        this._cellsPerPage = new Vec2();\n        this._pagesPerCell = new Vec2();\n        this.setPageSize(pageSize);\n        this._retainSize = retainSize;\n        this._totalPages = new Vec2();\n        this._totalCells = new Vec2();\n        this._totalPx = new Vec2();\n        this._pagePxRanges = pagePxRanges;\n        this._usePx = pagePxRanges !== null;\n    }\n    get totalPx() {\n        return this._totalPx;\n    }\n    get totalCells() {\n        return this._totalCells;\n    }\n    get totalPages() {\n        return this._totalPages;\n    }\n    setPageSize(v) {\n        if (!this._cellsPerPage.equals(v)) {\n            this.emptyPageStore();\n        }\n        this._cellsPerPage.set(v);\n        this._pagesPerCell.x = 1 / v.x;\n        this._pagesPerCell.y = 1 / v.y;\n    }\n    isRequestedDataLoaded(caller) {\n        let result = false;\n        const hasLoadPort = !caller.loadPort.isZero;\n        const hasPxLoadPort = !caller.pxLoadPort.isZero;\n        if (hasLoadPort || hasPxLoadPort) {\n            const pages = hasLoadPort ?\n                this.cellRangeToPageRange(caller.loadPort) :\n                this.pxRangeToPageRange(caller.pxLoadPort);\n            result = pages.first((p) => !this._pageLookup.has(p.y * this._totalPages.x + p.x)) === null;\n        }\n        return result;\n    }\n    limitPagesToLoad(pageRange) {\n        const result = pageRange.clone();\n        const pages = new Rect().fromRange2(pageRange);\n        let isNew = false;\n        for (let i = pages.start.y; i < pages.stop.y; i += 1) {\n            for (let j = pages.start.x; j < pages.stop.x; j += 1) {\n                if (!this._pageLookup.has(i * this._cellsPerPage.x + j)\n                    && !this._requestedPages.has(i * this._cellsPerPage.x + j)) {\n                    isNew = true;\n                    break;\n                }\n            }\n            if (isNew) {\n                break;\n            }\n            result.pos.y += 1;\n            result.size.y -= 1;\n        }\n        isNew = false;\n        for (let i = pages.stop.y; i > pages.start.y; i -= 1) {\n            for (let j = pages.start.x; j < pages.stop.x; j += 1) {\n                if (!this._pageLookup.has(i * this._cellsPerPage.x + j)\n                    && !this._requestedPages.has(i * this._cellsPerPage.x + j)) {\n                    isNew = true;\n                    break;\n                }\n            }\n            if (isNew) {\n                break;\n            }\n            result.size.y -= 1;\n        }\n        isNew = false;\n        for (let i = pages.start.x; i < pages.stop.x; i += 1) {\n            for (let j = pages.start.y; j < pages.stop.y; j += 1) {\n                if (!this._pageLookup.has(j * this._cellsPerPage.x + i)\n                    && !this._requestedPages.has(j * this._cellsPerPage.x + i)) {\n                    isNew = true;\n                    break;\n                }\n            }\n            if (isNew) {\n                break;\n            }\n            result.pos.x += 1;\n            result.size.x -= 1;\n        }\n        isNew = false;\n        for (let i = pages.stop.x; i > pages.start.x; i -= 1) {\n            for (let j = pages.start.y; j < pages.stop.y; j += 1) {\n                if (!this._pageLookup.has(j * this._cellsPerPage.x + i)\n                    && !this._requestedPages.has(j * this._cellsPerPage.x + i)) {\n                    isNew = true;\n                    break;\n                }\n            }\n            if (isNew) {\n                break;\n            }\n            result.size.x -= 1;\n        }\n        return result;\n    }\n    cellSpaceToPageSpaceX(v) {\n        return (v / this._cellsPerPage.x) | 0;\n    }\n    cellSpaceToPageSpaceY(v) {\n        return (v / this._cellsPerPage.y) | 0;\n    }\n    cellSpaceToInnerPageSpaceX(v) {\n        return v - (this._cellsPerPage.x * this.cellSpaceToPageSpaceX(v));\n    }\n    cellSpaceToInnerPageSpaceY(v) {\n        return v - (this._cellsPerPage.y * this.cellSpaceToPageSpaceY(v));\n    }\n    pxRangeToPageRange(pixels) {\n        Util.assert(!!this._pagePxRanges.x && !!this._pagePxRanges.y, \"pagePxRanges does not contain valid ranges\");\n        let x1 = pixels.pos.x;\n        let pageX1 = Arr.binarySearch(this._pagePxRanges.x, (el) => {\n            return (el.p + el.s <= x1) ? -1 :\n                (el.p > x1) ? 1 :\n                    0;\n        });\n        let y1 = pixels.pos.y;\n        let pageY1 = Arr.binarySearch(this._pagePxRanges.y, (el) => {\n            return (el.p + el.s <= y1) ? -1 :\n                (el.p > y1) ? 1 :\n                    0;\n        });\n        let x2 = pixels.pos.x + pixels.size.x - 1;\n        let pageX2 = Arr.binarySearch(this._pagePxRanges.x, (el) => {\n            return (el.p + el.s <= x2) ? -1 :\n                (el.p > x2) ? 1 :\n                    0;\n        });\n        let y2 = pixels.pos.y + pixels.size.y - 1;\n        let pageY2 = Arr.binarySearch(this._pagePxRanges.y, (el) => {\n            return (el.p + el.s <= y2) ? -1 :\n                (el.p > y2) ? 1 :\n                    0;\n        });\n        let pages = new Range2().fromRect(new Rect(pageX1, pageY1, pageX2, pageY2, true));\n        return pages;\n    }\n    cellRangeToPageRange(cells) {\n        let pages = new Range2().set(cells);\n        const rect = this._dummyRect.fromRange2(pages).translate(this._pagesPerCell);\n        rect.start.toInt();\n        rect.stop.ceil();\n        pages.fromRect(rect);\n        return pages;\n    }\n    pageRangeToCellRange(pages) {\n        return (new Range2()).set(pages).translate(this._cellsPerPage).toInt();\n    }\n    pxRangeToCellRange(pixels) {\n        const pageRange = this.pxRangeToPageRange(pixels);\n        const pages = this.getDataPagesForPageRange(pageRange);\n        let pos = pages[0].pxScope.start.clone();\n        let indexX1 = 0;\n        Arr.until(pages[0].r[0].c, (el, i) => pixels.pos.x < pos.x + el.w, (el, i) => { pos.x += el.w; ++indexX1; });\n        let indexY1 = 0;\n        Arr.until(pages[0].r, (el, i) => pixels.pos.y < pos.y + el.h, (el, i) => { pos.y += el.h; ++indexY1; });\n        pos = pages[pages.length - 1].pxScope.start.clone();\n        let indexX2 = 0;\n        Arr.until(pages[pages.length - 1].r[0].c, (el, i) => pixels.pos.x + pixels.size.x - 1 < pos.x + el.w, (el, i) => { pos.x += el.w; ++indexX2; });\n        let indexY2 = 0;\n        Arr.until(pages[pages.length - 1].r, (el, i) => pixels.pos.y + pixels.size.y - 1 < pos.y + el.h, (el, i) => { pos.y += el.h; ++indexY2; });\n        let start = pages[0].r[indexY1].c[indexX1].i;\n        let stop = pages[pages.length - 1].r[indexY2].c[indexX2].i;\n        let result = new Range2().fromRect(new Rect(start.x, start.y, stop.x, stop.y, true));\n        return result;\n    }\n    addDataToPageStore(callers, payload) {\n        const pages = this.partitionDataIntoPages(payload.r, payload.dataPort, payload.pxScope);\n        pages.forEach((p) => this.insertPage(p));\n        this.cleanPageStore(callers);\n    }\n    readPropertiesFromResponse(payload) {\n        if (!this._totalCells.equals(payload.totalCells)) {\n            this._totalPages.set(payload.totalCells).scale(this._pagesPerCell);\n            this._totalCells.set(payload.totalCells);\n            if (this._usePx) {\n                this._totalPx.set(payload.totalPx);\n            }\n        }\n    }\n    emptyPageStore() {\n        while (this._pageQueue.length > 0) {\n            this.shiftPageQueue();\n        }\n    }\n    cleanPageStore(callers) {\n        let locked = this.calculateLockedPages(callers);\n        let retainCount = Math.max(this._retainSize, locked.values.length);\n        Arr.reverse(this._pageQueue);\n        Arr.reverseUntil(this._pageQueue, (el, i) => this._pageQueue.length <= retainCount, (el, i) => {\n            if (!locked.has(\"\" + this._pageQueue[i].id)) {\n                this.removePageFromQueue(this._pageQueue[i]);\n            }\n        });\n        Arr.reverse(this._pageQueue);\n    }\n    removePageFromQueue(page) {\n        Arr.remove(this._pageQueue, page);\n        this.deletePageById(page.id);\n        page.release();\n    }\n    shiftPageQueue() {\n        const toRemove = this._pageQueue.shift();\n        this.deletePageById(toRemove.id);\n        toRemove.release();\n    }\n    deletePageById(pageId) {\n        const exists = this._pageLookup.has(pageId);\n        if (exists) {\n            this._pageLookup.delete(pageId);\n        }\n    }\n    partitionDataIntoPages(data, cellPort, pxScope) {\n        const pageRect = new Rect().fromRange2(this.cellRangeToPageRange(cellPort));\n        const result = new Array();\n        let pageCountY = 0;\n        for (let pageY = pageRect.start.y; pageY < pageRect.stop.y; ++pageY) {\n            let pageCountX = 0;\n            for (let pageX = pageRect.start.x; pageX < pageRect.stop.x; ++pageX) {\n                const id = (pageY * this._totalPages.x) + pageX;\n                const isNewPage = !this._pageLookup.has(id);\n                if (isNewPage) {\n                    const dataPage = this._pagePool.get();\n                    dataPage.id = id;\n                    dataPage.cellSize = this._cellsPerPage;\n                    if (this._usePx) {\n                        let pagePxX = this._pagePxRanges.x[pageX];\n                        let pagePxY = this._pagePxRanges.y[pageY];\n                        let pagePxScope = dataPage.pxScope;\n                        pagePxScope.start.x = pagePxX.p;\n                        pagePxScope.start.y = pagePxY.p;\n                        pagePxScope.stop.x = pagePxX.p + pagePxX.s - 1;\n                        pagePxScope.stop.y = pagePxY.p + pagePxY.s - 1;\n                    }\n                    result.push(dataPage);\n                    const dataStartY = pageCountY * this._cellsPerPage.y;\n                    const dataStartX = pageCountX * this._cellsPerPage.x;\n                    const dataLimitY = dataStartY + this._cellsPerPage.y;\n                    const dataLimitX = dataStartX + this._cellsPerPage.x;\n                    let pageRowNum = 0;\n                    for (let i = dataStartY; i < dataLimitY && i < data.length; ++i) {\n                        const row = data[i];\n                        const pageRow = dataPage.r[pageRowNum];\n                        pageRow.h = row.h;\n                        pageRow.i = row.i;\n                        pageRow.d = row.d;\n                        let pageColNum = 0;\n                        for (let j = dataStartX; j < dataLimitX && j < row.c.length; ++j) {\n                            pageRow.c[pageColNum] = row.c[j];\n                            ++pageColNum;\n                        }\n                        ++pageRowNum;\n                    }\n                }\n                ++pageCountX;\n            }\n            ++pageCountY;\n        }\n        return result;\n    }\n    insertPage(page) {\n        const isNew = !this._pageLookup.has(page.id);\n        if (!isNew) {\n            Arr.removeOneByFn(this._pageQueue, function (el) {\n                return el.id === page.id;\n            });\n        }\n        this._pageQueue.push(page);\n        this._pageLookup.set(page.id, page);\n    }\n    calculateLockedPages(callers) {\n        let unique = new Dictionary();\n        Arr.forEach(Arr.flatten(Arr.map(callers, (caller) => {\n            return this.getPageIdsForViewPort(caller.loadPort);\n        })), (id) => unique.set(id, id));\n        return unique;\n    }\n    assembleDataFromPages(caller) {\n        const result = new Array();\n        let loadPort = this.getLoadPort(caller);\n        Util.loop(loadPort.size.y, (i) => result.push(new DataRow(loadPort.size.x)));\n        const dataPages = this.getDataPages(caller);\n        const loadRect = new Rect().fromRange2(loadPort);\n        const pageRange = this.cellRangeToPageRange(loadPort);\n        const viewSpace = new Vec2();\n        const modelSpace = new Vec2();\n        const pageSpace = new Vec2();\n        const innerPageSpace = new Vec2();\n        let dataPageNum;\n        const modelRowCount = result.length;\n        const modelColCount = result[0] === undefined ? 0 : result[0].c.length;\n        const relativePageSpace = new Vec2();\n        for (viewSpace.y = loadRect.start.y; viewSpace.y < loadRect.stop.y && modelSpace.y < modelRowCount; viewSpace.y += 1, modelSpace.y += 1) {\n            pageSpace.y = this.cellSpaceToPageSpaceY(viewSpace.y);\n            modelSpace.x = 0;\n            innerPageSpace.y = this.cellSpaceToInnerPageSpaceY(viewSpace.y);\n            relativePageSpace.set(pageSpace).subtract(pageRange.pos);\n            dataPageNum = relativePageSpace.y * pageRange.size.x + relativePageSpace.x;\n            let rowInfo = dataPages[dataPageNum].r[innerPageSpace.y];\n            result[modelSpace.y].init({ i: rowInfo.i, h: rowInfo.h, d: rowInfo.d });\n            for (viewSpace.x = loadRect.start.x; viewSpace.x < loadRect.stop.x && modelSpace.x < modelColCount; viewSpace.x += 1, modelSpace.x += 1) {\n                pageSpace.x = this.cellSpaceToPageSpaceX(viewSpace.x);\n                innerPageSpace.x = this.cellSpaceToInnerPageSpaceX(viewSpace.x);\n                innerPageSpace.y = this.cellSpaceToInnerPageSpaceY(viewSpace.y);\n                relativePageSpace.set(pageSpace).subtract(pageRange.pos);\n                dataPageNum = relativePageSpace.y * pageRange.size.x + relativePageSpace.x;\n                result[modelSpace.y].c[modelSpace.x] = dataPages[dataPageNum].r[innerPageSpace.y].c[innerPageSpace.x];\n            }\n        }\n        return result;\n    }\n    getPageIdsForViewPort(viewPort) {\n        const pages = this.cellRangeToPageRange(viewPort);\n        const result = [];\n        pages.forEach((p) => {\n            const pos = p.y * this._cellsPerPage.x + p.x;\n            if (this._pageLookup.has(pos)) {\n                result.push(this._pageLookup.get(pos).id);\n            }\n            return false;\n        });\n        return result;\n    }\n    getLoadPort(caller) {\n        let byCells = !caller.loadPort.isZero;\n        return byCells ?\n            caller.loadPort :\n            this.pxRangeToCellRange(caller.pxLoadPort);\n    }\n    getDataPages(caller) {\n        let byCells = !caller.loadPort.isZero;\n        return byCells ?\n            this.getDataPagesForCellPort(caller.loadPort) :\n            this.getDataPagesForPxPort(caller.pxLoadPort);\n    }\n    getDataPagesForCellPort(port) {\n        const pages = this.cellRangeToPageRange(port);\n        return this.getDataPagesForPageRange(pages);\n    }\n    getDataPagesForPxPort(port) {\n        const pages = this.pxRangeToPageRange(port);\n        return this.getDataPagesForPageRange(pages);\n    }\n    getDataPagesForPageRange(pages) {\n        const result = new Array();\n        pages.forEach((p) => {\n            const pos = p.y * this._totalPages.x + p.x;\n            if (this._pageLookup.has(pos)) {\n                result.push(this._pageLookup.get(pos));\n            }\n            return false;\n        });\n        return result;\n    }\n}\n//# sourceMappingURL=PageStore.js.map","import { Arr, Rect, Test, Util, Vec2 } from \"goodcore\";\nimport { CallerHandle } from \"./CallerHandle\";\nimport { DataStoreConsumable } from \"./DataStoreConsumable\";\nimport { DataStoreRequestDto } from \"./Dto/DataStoreRequestDto\";\nimport { PageStore } from \"./PageStore\";\nexport class DataStore {\n    constructor(config) {\n        this.isDebug = true;\n        this._id = Util.newUUID();\n        this._usePx = true;\n        this._requestCounter = 0;\n        this._handleCounter = 0;\n        this._callers = [];\n        this._pageStore = null;\n        this._endPointFn = config.endPointFn ? config.endPointFn : DataStore.DEFAULT_CONFIG.endPointFn;\n        this._pageStore = new PageStore(config.pageSize || DataStore.DEFAULT_CONFIG.pageSize, config.retainSize ? config.retainSize : DataStore.DEFAULT_CONFIG.retainSize, config.pagePxRanges);\n    }\n    load(caller, force = false) {\n        Util.assert(Test.isFunction(this._endPointFn), \"EndPoint is valid function\", this.isDebug);\n        Util.assert(caller.viewPort !== undefined, \"ViewPort is defined\", this.isDebug);\n        if (this.loadPortHasChanged(caller) || force) {\n            caller.limitLoadPortByTotalCells();\n            caller.limitPxLoadPortByTotalPx();\n            if (this._pageStore.isRequestedDataLoaded(caller)) {\n                this.addDataToStream(caller, force);\n                this._pageStore.cleanPageStore(this._callers);\n            }\n            else {\n                caller.fetchSubscription = this.fetchData(caller).subscribe((value) => {\n                    if (!Util.assert(value !== undefined, \"Payload from server was empty in DataStore.load()\", this.isDebug)) {\n                        return;\n                    }\n                    this.readPropertiesFromResponse(caller, value);\n                    caller.limitLoadPortByTotalCells();\n                    caller.limitPxLoadPortByTotalPx();\n                    this._pageStore.addDataToPageStore(this._callers, value);\n                    if (caller.ignoreFetch < caller.requestId) {\n                        this.addDataToStream(caller, force);\n                    }\n                }, (error) => {\n                    caller.cancelOngoingFetch();\n                    this.onDataFail(caller, error);\n                });\n            }\n        }\n    }\n    loadPortHasChanged(caller) {\n        const loadPort = caller.loadPort;\n        const pxLoadPort = caller.pxLoadPort;\n        return (!loadPort.isZero && !loadPort.equals(caller.fixedLoadPort)) ||\n            (!pxLoadPort.isZero && !pxLoadPort.equals(caller.fixedPxLoadPort));\n    }\n    readPropertiesFromResponse(caller, value) {\n        caller.totalCells = new Vec2().set(value.totalCells);\n        this._usePx = !!value.pxScope;\n        if (this._usePx) {\n            caller.totalPx.set(value.totalPx);\n        }\n        if (value.cellsPerPage) {\n            this._pageStore.setPageSize(value.cellsPerPage);\n        }\n        this._pageStore.readPropertiesFromResponse(value);\n    }\n    register(config) {\n        const result = new CallerHandle(this._handleCounter, this, config);\n        this._handleCounter += 1;\n        this._callers.push(result.internal);\n        return result;\n    }\n    fetchData(caller) {\n        const dto = this.createRequestDTO(caller);\n        caller.requestId = this._requestCounter;\n        let data;\n        caller.cancelOngoingFetch();\n        return this._endPointFn(dto);\n    }\n    createRequestDTO(caller) {\n        let pxRequest = null;\n        let cellRequest = null;\n        let pageRequest = null;\n        if (!caller.pxViewPort.isZero) {\n            pageRequest = this._pageStore.pxRangeToPageRange(caller.pxLoadPort);\n        }\n        else {\n            pageRequest = this._pageStore.cellRangeToPageRange(caller.loadPort);\n        }\n        pageRequest = this._pageStore.limitPagesToLoad(pageRequest);\n        cellRequest = this._pageStore.pageRangeToCellRange(pageRequest);\n        let foo = new DataStoreRequestDto();\n        const result = new DataStoreRequestDto().init({\n            sourceId: this._id,\n            requestId: this._requestCounter,\n            cellRequest\n        });\n        this._requestCounter += 1;\n        return result;\n    }\n    onDataFail(caller, reason) {\n        throw new Error(\"Not Implemented\");\n    }\n    addDataToStream(caller, force = false) {\n        if (!this.viewPortIsAlreadyStreamed(caller) || force) {\n            caller.fixLoadPort();\n            const loadPort = this._pageStore.getLoadPort(caller);\n            const rows = this._pageStore.assembleDataFromPages(caller);\n            let pxScope = null;\n            if (this._usePx) {\n                pxScope = this.calculatePxRangeFromCellRange(loadPort);\n            }\n            let result = new DataStoreConsumable();\n            result.init({ totalCells: this._pageStore.totalCells, totalPx: this._pageStore.totalPx, loadPort, rows, pxScope });\n            caller.stream.next(result);\n        }\n    }\n    viewPortIsAlreadyStreamed(caller) {\n        return (!caller.viewPort.isZero && caller.fixedLoadPort.contains(caller.viewPort)) ||\n            (!caller.pxViewPort.isZero && caller.fixedPxLoadPort.contains(caller.pxViewPort));\n    }\n    calculatePxRangeFromCellRange(loadPort) {\n        let result = new Rect();\n        const dataPages = this._pageStore.getDataPagesForCellPort(loadPort);\n        const loadRect = new Rect().fromRange2(loadPort);\n        let startPx = dataPages[0].pxScope.start.clone();\n        let stopPx = dataPages[dataPages.length - 1].pxScope.stop.clone();\n        let leftIndex = dataPages[0].r[0].c[0].i.x;\n        let rightIndex = dataPages[0].r[0].c[dataPages[0].r[0].c.length - 1].i.x;\n        let topIndex = dataPages[0].r[0].i;\n        let bottomIndex = dataPages[dataPages.length - 1].r[dataPages[dataPages.length - 1].r.length - 1].i;\n        let cells = Arr.shallowCopy(dataPages[0].r[0].c);\n        Arr.until(cells, (cell, i) => i + leftIndex >= loadRect.start.x, (cell, i) => startPx.x += cell.w);\n        Arr.reverse(cells);\n        Arr.until(cells, (cell, i) => rightIndex - i >= loadRect.start.x, (cell, i) => stopPx.x -= cell.w);\n        let rows = Arr.shallowCopy(dataPages[0].r);\n        Arr.until(rows, (row, i) => i + topIndex >= loadRect.start.y, (row, i) => startPx.y += row.h);\n        Arr.reverse(rows);\n        Arr.until(rows, (row, i) => rightIndex - i >= loadRect.start.y, (row, i) => stopPx.y -= row.h);\n        result.start = startPx;\n        result.stop = stopPx;\n        return result;\n    }\n}\nDataStore.DEFAULT_CONFIG = {\n    pageSize: new Vec2(10, 10),\n    retainSize: 10,\n    endPointFn: null\n};\n//# sourceMappingURL=DataStore.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Initable, Range2, Vec2 } from \"goodcore\";\nlet RequestConfig = class RequestConfig {\n    constructor() {\n        this._viewPort = new Range2();\n        this._pxViewPort = new Range2();\n        this._requestMargin = new Vec2(0, 0);\n        this._loadPort = new Range2();\n        this._pxLoadPort = new Range2();\n        this._pxRequestMargin = new Vec2(0, 0);\n    }\n    init(obj, mapping) {\n        throw new Error(\"Method not implemented.\");\n    }\n    get viewPort() {\n        return this._viewPort;\n    }\n    set viewPort(v) {\n        this._viewPort.set(v);\n        this._loadPort = this.calculateLoadPort(this._viewPort, this._requestMargin);\n        this._pxViewPort.zero();\n        this._pxLoadPort.zero();\n    }\n    get requestMargin() {\n        return this._requestMargin;\n    }\n    set requestMargin(v) {\n        this._requestMargin.set(v);\n        this._loadPort = this.calculateLoadPort(this._viewPort, this._requestMargin);\n    }\n    get pxViewPort() {\n        return this._pxViewPort;\n    }\n    set pxViewPort(v) {\n        this._pxViewPort.set(v);\n        this._pxLoadPort = this.calculateLoadPort(this._pxViewPort, this._pxRequestMargin);\n        this._viewPort.zero();\n        this._loadPort.zero();\n    }\n    get pxRequestMargin() {\n        return this._pxRequestMargin;\n    }\n    set pxRequestMargin(v) {\n        this._pxRequestMargin.set(v);\n        this._pxLoadPort = this.calculateLoadPort(this._pxViewPort, this._pxRequestMargin);\n    }\n    get loadPort() {\n        return this._loadPort;\n    }\n    set loadPort(v) {\n        this._loadPort.set(v);\n        this._pxLoadPort.zero();\n    }\n    get pxLoadPort() {\n        return this._pxLoadPort;\n    }\n    set pxLoadPort(v) {\n        this._pxLoadPort.set(v);\n        this._loadPort.zero();\n    }\n    calculateLoadPort(viewPort, requestMargin) {\n        let result = viewPort.clone();\n        result.pos.subtract(requestMargin);\n        result.size.add(requestMargin.clone().multiply(2));\n        let underflow = result.pos.clone().invert().max({ x: 0, y: 0 });\n        result.pos.add(underflow);\n        result.size.subtract(underflow);\n        return result;\n    }\n};\nRequestConfig = __decorate([\n    Initable\n], RequestConfig);\nexport { RequestConfig };\n//# sourceMappingURL=RequestConfig.js.map"],"names":["CallerInternal","[object Object]","config","stream","this","_fixedLoadPort","Range2","_fixedPxLoadPort","totalCells","Vec2","totalPx","_config","_stream","fetchSubscription","ignoreFetch","requestId","v","loadPort","pxLoadPort","fixedLoadPort","fixedPxLoadPort","viewPort","equals","ignoreOngoingFetch","pxViewPort","isZero","set","zero","unsubscribe","limitPortByTotal","port","total","x","y","overflow","Rect","fromRange2","stop","subtract","max","size","CallerHandle","id","store","_force","_id","_store","BehaviorSubject","_internal","internal","requestMargin","readConfig","load","Error","undefined","forceStream","__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","exports","pxScope","rows","obj","mapping","DataStoreConsumable","Initable","sourceId","cellRequest","DataStoreRequestDto","__metadata","k","metadata","DataRow","h","Array","pool","Poolable","Number","DataPage","_r","_pxScope","_cellSize","cellSize","initData","result","push","j","Math","min","PageStore","pageSize","retainSize","pagePxRanges","isDebug","_usePx","_dummyRect","_pagePool","Pool","_pageLookup","Dictionary","_requestedPages","_pageQueue","_cellsPerPage","_pagesPerCell","setPageSize","_retainSize","_totalPages","_totalCells","_totalPx","_pagePxRanges","totalPages","emptyPageStore","caller","hasLoadPort","hasPxLoadPort","cellRangeToPageRange","pxRangeToPageRange","first","p","has","pageRange","clone","pages","isNew","start","pos","cellSpaceToPageSpaceX","cellSpaceToPageSpaceY","pixels","Util","assert","x1","pageX1","Arr","binarySearch","el","s","y1","pageY1","x2","pageX2","y2","pageY2","fromRect","cells","rect","translate","toInt","ceil","getDataPagesForPageRange","indexX1","until","w","indexY1","indexX2","indexY2","callers","payload","partitionDataIntoPages","dataPort","forEach","insertPage","cleanPageStore","scale","shiftPageQueue","locked","calculateLockedPages","retainCount","values","reverse","reverseUntil","removePageFromQueue","page","remove","deletePageById","release","toRemove","shift","pageId","delete","data","cellPort","pageRect","pageCountY","pageY","pageCountX","pageX","dataPage","get","pagePxX","pagePxY","pagePxScope","dataStartY","dataStartX","dataLimitY","dataLimitX","pageRowNum","row","pageRow","pageColNum","removeOneByFn","unique","flatten","map","getPageIdsForViewPort","getLoadPort","loop","dataPages","getDataPages","loadRect","viewSpace","modelSpace","pageSpace","innerPageSpace","dataPageNum","modelRowCount","modelColCount","relativePageSpace","cellSpaceToInnerPageSpaceY","rowInfo","init","cellSpaceToInnerPageSpaceX","pxRangeToCellRange","getDataPagesForCellPort","getDataPagesForPxPort","DataStore","newUUID","_requestCounter","_handleCounter","_callers","_pageStore","_endPointFn","endPointFn","DEFAULT_CONFIG","force","Test","isFunction","loadPortHasChanged","limitLoadPortByTotalCells","limitPxLoadPortByTotalPx","isRequestedDataLoaded","addDataToStream","fetchData","subscribe","value","readPropertiesFromResponse","addDataToPageStore","error","cancelOngoingFetch","onDataFail","cellsPerPage","dto","createRequestDTO","pageRequest","limitPagesToLoad","pageRangeToCellRange","reason","viewPortIsAlreadyStreamed","fixLoadPort","assembleDataFromPages","calculatePxRangeFromCellRange","next","contains","startPx","stopPx","leftIndex","rightIndex","topIndex","shallowCopy","cell","_viewPort","_pxViewPort","_requestMargin","_loadPort","_pxLoadPort","_pxRequestMargin","calculateLoadPort","pxRequestMargin","add","multiply","underflow","invert","RequestConfig"],"mappings":"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"}