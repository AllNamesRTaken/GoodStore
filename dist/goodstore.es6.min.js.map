{"version":3,"file":"goodstore.es6.min.js","sources":["lib/CallerInternal.js","lib/CallerHandle.js","lib/DataStoreConsumable.js","lib/Dto/DataStoreRequestDto.js","lib/DataRow.js","lib/DataPage.js","lib/PageStore.js","lib/DataStore.js","lib/RequestConfig.js"],"sourcesContent":["import { Range2, Vec2 } from \"goodcore\";\r\nexport class CallerInternal {\r\n    constructor(config, stream) {\r\n        this._fixedLoadPort = new Range2();\r\n        this._fixedPxLoadPort = new Range2();\r\n        this.totalCells = new Vec2(-1, -1);\r\n        this.totalPx = new Vec2(-1, -1);\r\n        this._config = config;\r\n        this._stream = stream;\r\n        this.fetchSubscription = null;\r\n        this.ignoreFetch = -1;\r\n        this.requestId = -1;\r\n    }\r\n    get config() {\r\n        return this._config;\r\n    }\r\n    set config(v) {\r\n        this._config = v;\r\n    }\r\n    get stream() {\r\n        return this._stream;\r\n    }\r\n    get loadPort() {\r\n        return this.config.loadPort;\r\n    }\r\n    set loadPort(v) {\r\n        this.config.loadPort = v;\r\n    }\r\n    get pxLoadPort() {\r\n        return this.config.pxLoadPort;\r\n    }\r\n    set pxLoadPort(v) {\r\n        this.config.pxLoadPort = v;\r\n    }\r\n    get fixedLoadPort() {\r\n        return this._fixedLoadPort;\r\n    }\r\n    get fixedPxLoadPort() {\r\n        return this._fixedLoadPort;\r\n    }\r\n    get viewPort() {\r\n        return this.config.viewPort;\r\n    }\r\n    set viewPort(v) {\r\n        if (!this.config.viewPort.equals(v)) {\r\n            this.ignoreOngoingFetch();\r\n        }\r\n        this.config.viewPort = v;\r\n    }\r\n    get pxViewPort() {\r\n        return this.config.pxViewPort;\r\n    }\r\n    set pxViewPort(v) {\r\n        if (!this.config.pxViewPort.equals(v)) {\r\n            this.ignoreOngoingFetch();\r\n        }\r\n        this.config.pxViewPort = v;\r\n    }\r\n    fixLoadPort() {\r\n        if (this.config.pxLoadPort.isZero) {\r\n            this._fixedLoadPort.set(this.config.loadPort);\r\n            this._fixedPxLoadPort.zero();\r\n        }\r\n        else {\r\n            this._fixedPxLoadPort.set(this.config.pxLoadPort);\r\n            this._fixedLoadPort.zero();\r\n        }\r\n    }\r\n    ignoreOngoingFetch() {\r\n        if (this.fetchSubscription !== null) {\r\n            this.ignoreFetch = this.requestId;\r\n        }\r\n    }\r\n    cancelOngoingFetch() {\r\n        if (this.fetchSubscription !== null) {\r\n            this.fetchSubscription.unsubscribe();\r\n            this.fetchSubscription = null;\r\n        }\r\n    }\r\n    limitLoadPortByTotalCells() {\r\n        this.limitPortByTotal(this.loadPort, this.totalCells);\r\n    }\r\n    limitPxLoadPortByTotalPx() {\r\n        this.limitPortByTotal(this.pxLoadPort, this.totalPx);\r\n    }\r\n    limitPortByTotal(port, total) {\r\n        if (!port.isZero && !total.equals({ x: -1, y: -1 })) {\r\n            let overflow = port.toRect().stop.subtract(total).max(new Vec2(0, 0));\r\n            port.size.subtract(overflow);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=CallerInternal.js.map","import { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { CallerInternal } from \"./CallerInternal\";\r\nexport class CallerHandle {\r\n    constructor(id, store, config) {\r\n        this._force = false;\r\n        this._id = id;\r\n        this._store = store;\r\n        this._stream = new BehaviorSubject(null);\r\n        this._internal = new CallerInternal(config, this._stream);\r\n    }\r\n    get internal() {\r\n        return this._internal;\r\n    }\r\n    get stream() {\r\n        return this._stream;\r\n    }\r\n    get viewPort() {\r\n        return this._internal.viewPort;\r\n    }\r\n    set viewPort(v) {\r\n        this._internal.viewPort = v;\r\n    }\r\n    get pxViewPort() {\r\n        return this._internal.pxViewPort;\r\n    }\r\n    set pxViewPort(v) {\r\n        this._internal.pxViewPort = v;\r\n    }\r\n    get requestMargin() {\r\n        return this._internal.config.requestMargin;\r\n    }\r\n    set requestMargin(v) {\r\n        this._internal.config.requestMargin = v;\r\n    }\r\n    load(config) {\r\n        this.readConfig(config);\r\n        this._store.load(this.internal, this._force);\r\n    }\r\n    unregister() {\r\n        throw new Error(\"not implemented\");\r\n    }\r\n    readConfig(config) {\r\n        if (config !== undefined) {\r\n            if (config.requestMargin !== undefined) {\r\n                this.internal.config.requestMargin = config.requestMargin;\r\n            }\r\n            if (config.viewPort !== undefined) {\r\n                this.viewPort = config.viewPort;\r\n            }\r\n            if (config.pxViewPort !== undefined) {\r\n                this.pxViewPort = config.pxViewPort;\r\n            }\r\n            this._force = config.forceStream === true;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=CallerHandle.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Initable, Rect, Vec2 } from \"goodcore\";\r\nlet DataStoreConsumable = class DataStoreConsumable {\r\n    constructor() {\r\n        this.totalCells = new Vec2();\r\n        this.totalPx = new Vec2();\r\n        this.loadPort = null;\r\n        this.pxScope = new Rect();\r\n        this.rows = null;\r\n    }\r\n    init(obj) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n};\r\nDataStoreConsumable = __decorate([\r\n    Initable\r\n], DataStoreConsumable);\r\nexport { DataStoreConsumable };\r\n//# sourceMappingURL=DataStoreConsumable.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Initable } from \"goodcore\";\r\nlet DataStoreRequestDto = class DataStoreRequestDto {\r\n    init(obj) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n};\r\nDataStoreRequestDto = __decorate([\r\n    Initable\r\n], DataStoreRequestDto);\r\nexport { DataStoreRequestDto };\r\n//# sourceMappingURL=DataStoreRequestDto.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Initable, Poolable } from \"goodcore\";\r\nlet DataRow = class DataRow {\r\n    constructor(length = 0) {\r\n        this.i = 0;\r\n        this.h = 0;\r\n        this.d = null;\r\n        this.c = new Array(length);\r\n    }\r\n    init(obj) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    release() {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    initPool(pool) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n};\r\nDataRow = __decorate([\r\n    Poolable,\r\n    Initable,\r\n    __metadata(\"design:paramtypes\", [Number])\r\n], DataRow);\r\nexport { DataRow };\r\n//# sourceMappingURL=DataRow.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Initable, Poolable, Rect, Vec2 } from \"goodcore\";\r\nimport { DataRow } from \"./DataRow\";\r\nlet DataPage = class DataPage {\r\n    constructor() {\r\n        this._id = 0;\r\n        this._r = [];\r\n        this._pxScope = new Rect();\r\n        this._cellSize = new Vec2();\r\n        this._r = new Array();\r\n    }\r\n    release() {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    initPool(pool) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    set id(v) {\r\n        this._id = v;\r\n    }\r\n    get r() {\r\n        return this._r;\r\n    }\r\n    get pxScope() {\r\n        return this._pxScope;\r\n    }\r\n    set pxScope(v) {\r\n        this._pxScope.set(v);\r\n    }\r\n    get cellSize() {\r\n        return this._cellSize;\r\n    }\r\n    set cellSize(v) {\r\n        this._cellSize.set(v);\r\n        this.initData(v);\r\n    }\r\n    addRow() {\r\n        const result = new DataRow();\r\n        this._r.push(result);\r\n        return result;\r\n    }\r\n    initData(size) {\r\n        let i = -1;\r\n        if (this._r === undefined) {\r\n            this._r = [];\r\n        }\r\n        let r = this._r;\r\n        let j = r.length - 1;\r\n        let k = Math.min(j, size.y);\r\n        while (++j < size.y) {\r\n            r.push(new DataRow(size.x));\r\n        }\r\n        if (r.length !== size.y) {\r\n            r.length = size.y;\r\n        }\r\n        while (++i < k) {\r\n            r[i].c.length = size.x;\r\n        }\r\n    }\r\n};\r\nDataPage = __decorate([\r\n    Poolable,\r\n    Initable,\r\n    __metadata(\"design:paramtypes\", [])\r\n], DataPage);\r\nexport { DataPage };\r\n//# sourceMappingURL=DataPage.js.map","import { DataRow } from \"./DataRow\";\r\nimport { Arr, Dictionary, Pool, Range2, Rect, Util, Vec2 } from \"goodcore\";\r\nimport { DataPage } from \"./DataPage\";\r\nexport class PageStore {\r\n    constructor(pageSize, retainSize, pagePxRanges = null) {\r\n        this.isDebug = true;\r\n        this._usePx = true;\r\n        this._dummyRect = new Rect();\r\n        this._pagePool = new Pool(DataPage);\r\n        this._pageLookup = new Dictionary();\r\n        this._requestedPages = new Dictionary();\r\n        this._pageQueue = new Array();\r\n        this._cellsPerPage = new Vec2();\r\n        this._pagesPerCell = new Vec2();\r\n        this.setPageSize(pageSize);\r\n        this._retainSize = retainSize;\r\n        this._totalPages = new Vec2();\r\n        this._totalCells = new Vec2();\r\n        this._totalPx = new Vec2();\r\n        this._pagePxRanges = pagePxRanges;\r\n        this._usePx = pagePxRanges !== null;\r\n    }\r\n    get totalPx() {\r\n        return this._totalPx;\r\n    }\r\n    get totalCells() {\r\n        return this._totalCells;\r\n    }\r\n    get totalPages() {\r\n        return this._totalPages;\r\n    }\r\n    setPageSize(v) {\r\n        if (!this._cellsPerPage.equals(v)) {\r\n            this.emptyPageStore();\r\n        }\r\n        this._cellsPerPage.set(v);\r\n        this._pagesPerCell.x = 1 / v.x;\r\n        this._pagesPerCell.y = 1 / v.y;\r\n    }\r\n    isRequestedDataLoaded(caller) {\r\n        let result = false;\r\n        const hasLoadPort = !caller.loadPort.isZero;\r\n        const hasPxLoadPort = !caller.pxLoadPort.isZero;\r\n        if (hasLoadPort || hasPxLoadPort) {\r\n            const pages = hasLoadPort ?\r\n                this.cellRangeToPageRange(caller.loadPort) :\r\n                this.pxRangeToPageRange(caller.pxLoadPort);\r\n            result = pages.first((p) => !this._pageLookup.has(p.y * this._totalPages.x + p.x)) === null;\r\n        }\r\n        return result;\r\n    }\r\n    limitPagesToLoad(pageRange) {\r\n        const result = pageRange.clone();\r\n        const pages = pageRange.toRect();\r\n        let isNew = false;\r\n        for (let i = pages.start.y; i < pages.stop.y; i += 1) {\r\n            for (let j = pages.start.x; j < pages.stop.x; j += 1) {\r\n                if (!this._pageLookup.has(i * this._cellsPerPage.x + j)\r\n                    && !this._requestedPages.has(i * this._cellsPerPage.x + j)) {\r\n                    isNew = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (isNew) {\r\n                break;\r\n            }\r\n            result.pos.y += 1;\r\n            result.size.y -= 1;\r\n        }\r\n        isNew = false;\r\n        for (let i = pages.stop.y; i > pages.start.y; i -= 1) {\r\n            for (let j = pages.start.x; j < pages.stop.x; j += 1) {\r\n                if (!this._pageLookup.has(i * this._cellsPerPage.x + j)\r\n                    && !this._requestedPages.has(i * this._cellsPerPage.x + j)) {\r\n                    isNew = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (isNew) {\r\n                break;\r\n            }\r\n            result.size.y -= 1;\r\n        }\r\n        isNew = false;\r\n        for (let i = pages.start.x; i < pages.stop.x; i += 1) {\r\n            for (let j = pages.start.y; j < pages.stop.y; j += 1) {\r\n                if (!this._pageLookup.has(j * this._cellsPerPage.x + i)\r\n                    && !this._requestedPages.has(j * this._cellsPerPage.x + i)) {\r\n                    isNew = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (isNew) {\r\n                break;\r\n            }\r\n            result.pos.x += 1;\r\n            result.size.x -= 1;\r\n        }\r\n        isNew = false;\r\n        for (let i = pages.stop.x; i > pages.start.x; i -= 1) {\r\n            for (let j = pages.start.y; j < pages.stop.y; j += 1) {\r\n                if (!this._pageLookup.has(j * this._cellsPerPage.x + i)\r\n                    && !this._requestedPages.has(j * this._cellsPerPage.x + i)) {\r\n                    isNew = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (isNew) {\r\n                break;\r\n            }\r\n            result.size.x -= 1;\r\n        }\r\n        return result;\r\n    }\r\n    cellSpaceToPageSpaceX(v) {\r\n        return (v / this._cellsPerPage.x) | 0;\r\n    }\r\n    cellSpaceToPageSpaceY(v) {\r\n        return (v / this._cellsPerPage.y) | 0;\r\n    }\r\n    cellSpaceToInnerPageSpaceX(v) {\r\n        return v - (this._cellsPerPage.x * this.cellSpaceToPageSpaceX(v));\r\n    }\r\n    cellSpaceToInnerPageSpaceY(v) {\r\n        return v - (this._cellsPerPage.y * this.cellSpaceToPageSpaceY(v));\r\n    }\r\n    pxRangeToPageRange(pixels) {\r\n        Util.assert(!!this._pagePxRanges.x && !!this._pagePxRanges.y, \"pagePxRanges does not contain valid ranges\");\r\n        let x1 = pixels.pos.x;\r\n        let pageX1 = Arr.binarySearch(this._pagePxRanges.x, (el) => {\r\n            return (el.p + el.s <= x1) ? -1 :\r\n                (el.p > x1) ? 1 :\r\n                    0;\r\n        });\r\n        let y1 = pixels.pos.y;\r\n        let pageY1 = Arr.binarySearch(this._pagePxRanges.y, (el) => {\r\n            return (el.p + el.s <= y1) ? -1 :\r\n                (el.p > y1) ? 1 :\r\n                    0;\r\n        });\r\n        let x2 = pixels.pos.x + pixels.size.x - 1;\r\n        let pageX2 = Arr.binarySearch(this._pagePxRanges.x, (el) => {\r\n            return (el.p + el.s <= x2) ? -1 :\r\n                (el.p > x2) ? 1 :\r\n                    0;\r\n        });\r\n        let y2 = pixels.pos.y + pixels.size.y - 1;\r\n        let pageY2 = Arr.binarySearch(this._pagePxRanges.y, (el) => {\r\n            return (el.p + el.s <= y2) ? -1 :\r\n                (el.p > y2) ? 1 :\r\n                    0;\r\n        });\r\n        let pages = new Rect(pageX1, pageY1, pageX2, pageY2, true).toRange2();\r\n        return pages;\r\n    }\r\n    cellRangeToPageRange(cells) {\r\n        let pages = new Range2().set(cells);\r\n        const rect = pages.toRect(false, this._dummyRect).translate(this._pagesPerCell);\r\n        rect.start.toInt();\r\n        rect.stop.ceil();\r\n        rect.toRange2(pages);\r\n        return pages;\r\n    }\r\n    pageRangeToCellRange(pages) {\r\n        return (new Range2()).set(pages).translate(this._cellsPerPage).toInt();\r\n    }\r\n    pxRangeToCellRange(pixels) {\r\n        const pageRange = this.pxRangeToPageRange(pixels);\r\n        const pages = this.getDataPagesForPageRange(pageRange);\r\n        let pos = pages[0].pxScope.start.clone();\r\n        let indexX1 = 0;\r\n        Arr.until(pages[0].r[0].c, (el, i) => pixels.pos.x < pos.x + el.w, (el, i) => { pos.x += el.w; ++indexX1; });\r\n        let indexY1 = 0;\r\n        Arr.until(pages[0].r, (el, i) => pixels.pos.y < pos.y + el.h, (el, i) => { pos.y += el.h; ++indexY1; });\r\n        pos = pages[pages.length - 1].pxScope.start.clone();\r\n        let indexX2 = 0;\r\n        Arr.until(pages[pages.length - 1].r[0].c, (el, i) => pixels.pos.x + pixels.size.x - 1 < pos.x + el.w, (el, i) => { pos.x += el.w; ++indexX2; });\r\n        let indexY2 = 0;\r\n        Arr.until(pages[pages.length - 1].r, (el, i) => pixels.pos.y + pixels.size.y - 1 < pos.y + el.h, (el, i) => { pos.y += el.h; ++indexY2; });\r\n        let start = pages[0].r[indexY1].c[indexX1].i;\r\n        let stop = pages[pages.length - 1].r[indexY2].c[indexX2].i;\r\n        let result = new Rect(start.x, start.y, stop.x, stop.y, true).toRange2();\r\n        return result;\r\n    }\r\n    addDataToPageStore(callers, payload) {\r\n        const pages = this.partitionDataIntoPages(payload.r, payload.dataPort, payload.pxScope);\r\n        pages.forEach((p) => this.insertPage(p));\r\n        this.cleanPageStore(callers);\r\n    }\r\n    readPropertiesFromResponse(payload) {\r\n        if (!this._totalCells.equals(payload.totalCells)) {\r\n            this._totalPages.set(payload.totalCells).scale(this._pagesPerCell);\r\n            this._totalCells.set(payload.totalCells);\r\n            if (this._usePx) {\r\n                this._totalPx.set(payload.totalPx);\r\n            }\r\n        }\r\n    }\r\n    emptyPageStore() {\r\n        while (this._pageQueue.length > 0) {\r\n            this.shiftPageQueue();\r\n        }\r\n    }\r\n    cleanPageStore(callers) {\r\n        let locked = this.calculateLockedPages(callers);\r\n        let retainCount = Math.max(this._retainSize, locked.list.count);\r\n        Arr.reverse(this._pageQueue);\r\n        Arr.reverseUntil(this._pageQueue, (el, i) => this._pageQueue.length <= retainCount, (el, i) => {\r\n            if (!locked.has(\"\" + this._pageQueue[i].id)) {\r\n                this.removePageFromQueue(this._pageQueue[i]);\r\n            }\r\n        });\r\n        Arr.reverse(this._pageQueue);\r\n    }\r\n    removePageFromQueue(page) {\r\n        Arr.remove(this._pageQueue, page);\r\n        this.deletePageById(page.id);\r\n        page.release();\r\n    }\r\n    shiftPageQueue() {\r\n        const toRemove = this._pageQueue.shift();\r\n        this.deletePageById(toRemove.id);\r\n        toRemove.release();\r\n    }\r\n    deletePageById(pageId) {\r\n        const exists = this._pageLookup.has(pageId);\r\n        if (exists) {\r\n            this._pageLookup.delete(pageId);\r\n        }\r\n    }\r\n    partitionDataIntoPages(data, cellPort, pxScope) {\r\n        const pageRect = this.cellRangeToPageRange(cellPort).toRect();\r\n        const result = new Array();\r\n        let pageCountY = 0;\r\n        for (let pageY = pageRect.start.y; pageY < pageRect.stop.y; ++pageY) {\r\n            let pageCountX = 0;\r\n            for (let pageX = pageRect.start.x; pageX < pageRect.stop.x; ++pageX) {\r\n                const id = (pageY * this._totalPages.x) + pageX;\r\n                const isNewPage = !this._pageLookup.has(id);\r\n                if (isNewPage) {\r\n                    const dataPage = this._pagePool.get();\r\n                    dataPage.id = id;\r\n                    dataPage.cellSize = this._cellsPerPage;\r\n                    if (this._usePx) {\r\n                        let pagePxX = this._pagePxRanges.x[pageX];\r\n                        let pagePxY = this._pagePxRanges.y[pageY];\r\n                        let pagePxScope = dataPage.pxScope;\r\n                        pagePxScope.start.x = pagePxX.p;\r\n                        pagePxScope.start.y = pagePxY.p;\r\n                        pagePxScope.stop.x = pagePxX.p + pagePxX.s - 1;\r\n                        pagePxScope.stop.y = pagePxY.p + pagePxY.s - 1;\r\n                    }\r\n                    result.push(dataPage);\r\n                    const dataStartY = pageCountY * this._cellsPerPage.y;\r\n                    const dataStartX = pageCountX * this._cellsPerPage.x;\r\n                    const dataLimitY = dataStartY + this._cellsPerPage.y;\r\n                    const dataLimitX = dataStartX + this._cellsPerPage.x;\r\n                    let pageRowNum = 0;\r\n                    for (let i = dataStartY; i < dataLimitY && i < data.length; ++i) {\r\n                        const row = data[i];\r\n                        const pageRow = dataPage.r[pageRowNum];\r\n                        pageRow.h = row.h;\r\n                        pageRow.i = row.i;\r\n                        pageRow.d = row.d;\r\n                        let pageColNum = 0;\r\n                        for (let j = dataStartX; j < dataLimitX && j < row.c.length; ++j) {\r\n                            pageRow.c[pageColNum] = row.c[j];\r\n                            ++pageColNum;\r\n                        }\r\n                        ++pageRowNum;\r\n                    }\r\n                }\r\n                ++pageCountX;\r\n            }\r\n            ++pageCountY;\r\n        }\r\n        return result;\r\n    }\r\n    insertPage(page) {\r\n        const isNew = !this._pageLookup.has(page.id);\r\n        if (!isNew) {\r\n            Arr.removeOneByFn(this._pageQueue, function (el) {\r\n                return el.id === page.id;\r\n            });\r\n        }\r\n        this._pageQueue.push(page);\r\n        this._pageLookup.set(page.id, page);\r\n    }\r\n    calculateLockedPages(callers) {\r\n        let unique = new Dictionary();\r\n        Arr.forEach(Arr.flatten(Arr.map(callers, (caller) => {\r\n            return this.getPageIdsForViewPort(caller.loadPort);\r\n        })), (id) => unique.set(id, id));\r\n        return unique;\r\n    }\r\n    assembleDataFromPages(caller) {\r\n        const result = new Array();\r\n        let loadPort = this.getLoadPort(caller);\r\n        Util.loop(loadPort.size.y, (i) => result.push(new DataRow(loadPort.size.x)));\r\n        const dataPages = this.getDataPages(caller);\r\n        const loadRect = loadPort.toRect();\r\n        const pageRange = this.cellRangeToPageRange(loadPort);\r\n        const viewSpace = new Vec2();\r\n        const modelSpace = new Vec2();\r\n        const pageSpace = new Vec2();\r\n        const innerPageSpace = new Vec2();\r\n        let dataPageNum;\r\n        const modelRowCount = result.length;\r\n        const modelColCount = result[0] === undefined ? 0 : result[0].c.length;\r\n        const relativePageSpace = new Vec2();\r\n        for (viewSpace.y = loadRect.start.y; viewSpace.y < loadRect.stop.y && modelSpace.y < modelRowCount; viewSpace.y += 1, modelSpace.y += 1) {\r\n            pageSpace.y = this.cellSpaceToPageSpaceY(viewSpace.y);\r\n            modelSpace.x = 0;\r\n            innerPageSpace.y = this.cellSpaceToInnerPageSpaceY(viewSpace.y);\r\n            relativePageSpace.set(pageSpace).subtract(pageRange.pos);\r\n            dataPageNum = relativePageSpace.y * pageRange.size.x + relativePageSpace.x;\r\n            let rowInfo = dataPages[dataPageNum].r[innerPageSpace.y];\r\n            result[modelSpace.y].init({ i: rowInfo.i, h: rowInfo.h, d: rowInfo.d });\r\n            for (viewSpace.x = loadRect.start.x; viewSpace.x < loadRect.stop.x && modelSpace.x < modelColCount; viewSpace.x += 1, modelSpace.x += 1) {\r\n                pageSpace.x = this.cellSpaceToPageSpaceX(viewSpace.x);\r\n                innerPageSpace.x = this.cellSpaceToInnerPageSpaceX(viewSpace.x);\r\n                innerPageSpace.y = this.cellSpaceToInnerPageSpaceY(viewSpace.y);\r\n                relativePageSpace.set(pageSpace).subtract(pageRange.pos);\r\n                dataPageNum = relativePageSpace.y * pageRange.size.x + relativePageSpace.x;\r\n                result[modelSpace.y].c[modelSpace.x] = dataPages[dataPageNum].r[innerPageSpace.y].c[innerPageSpace.x];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    getPageIdsForViewPort(viewPort) {\r\n        const pages = this.cellRangeToPageRange(viewPort);\r\n        const result = [];\r\n        pages.forEach((p) => {\r\n            const pos = p.y * this._cellsPerPage.x + p.x;\r\n            if (this._pageLookup.has(pos)) {\r\n                result.push(this._pageLookup.get(pos).id);\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    getLoadPort(caller) {\r\n        let byCells = !caller.loadPort.isZero;\r\n        return byCells ?\r\n            caller.loadPort :\r\n            this.pxRangeToCellRange(caller.pxLoadPort);\r\n    }\r\n    getDataPages(caller) {\r\n        let byCells = !caller.loadPort.isZero;\r\n        return byCells ?\r\n            this.getDataPagesForCellPort(caller.loadPort) :\r\n            this.getDataPagesForPxPort(caller.pxLoadPort);\r\n    }\r\n    getDataPagesForCellPort(port) {\r\n        const pages = this.cellRangeToPageRange(port);\r\n        return this.getDataPagesForPageRange(pages);\r\n    }\r\n    getDataPagesForPxPort(port) {\r\n        const pages = this.pxRangeToPageRange(port);\r\n        return this.getDataPagesForPageRange(pages);\r\n    }\r\n    getDataPagesForPageRange(pages) {\r\n        const result = new Array();\r\n        pages.forEach((p) => {\r\n            const pos = p.y * this._totalPages.x + p.x;\r\n            if (this._pageLookup.has(pos)) {\r\n                result.push(this._pageLookup.get(pos));\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n}\r\n//# sourceMappingURL=PageStore.js.map","import { Arr, Rect, Test, Util, Vec2 } from \"goodcore\";\r\nimport { CallerHandle } from \"./CallerHandle\";\r\nimport { DataStoreConsumable } from \"./DataStoreConsumable\";\r\nimport { DataStoreRequestDto } from \"./Dto/DataStoreRequestDto\";\r\nimport { PageStore } from \"./PageStore\";\r\nexport class DataStore {\r\n    constructor(config) {\r\n        this.isDebug = true;\r\n        this._id = Util.newUUID();\r\n        this._usePx = true;\r\n        this._requestCounter = 0;\r\n        this._handleCounter = 0;\r\n        this._callers = [];\r\n        this._pageStore = null;\r\n        this._endPointFn = config.endPointFn ? config.endPointFn : DataStore.DEFAULT_CONFIG.endPointFn;\r\n        this._pageStore = new PageStore(config.pageSize || DataStore.DEFAULT_CONFIG.pageSize, config.retainSize ? config.retainSize : DataStore.DEFAULT_CONFIG.retainSize, config.pagePxRanges);\r\n    }\r\n    load(caller, force = false) {\r\n        Util.assert(Test.isFunction(this._endPointFn), \"EndPoint is valid function\", this.isDebug);\r\n        Util.assert(caller.viewPort !== undefined, \"ViewPort is defined\", this.isDebug);\r\n        if (this.loadPortHasChanged(caller) || force) {\r\n            caller.limitLoadPortByTotalCells();\r\n            caller.limitPxLoadPortByTotalPx();\r\n            if (this._pageStore.isRequestedDataLoaded(caller)) {\r\n                this.addDataToStream(caller, force);\r\n                this._pageStore.cleanPageStore(this._callers);\r\n            }\r\n            else {\r\n                caller.fetchSubscription = this.fetchData(caller).subscribe((value) => {\r\n                    if (!Util.assert(value !== undefined, \"Payload from server was empty in DataStore.load()\", this.isDebug)) {\r\n                        return;\r\n                    }\r\n                    this.readPropertiesFromResponse(caller, value);\r\n                    caller.limitLoadPortByTotalCells();\r\n                    caller.limitPxLoadPortByTotalPx();\r\n                    this._pageStore.addDataToPageStore(this._callers, value);\r\n                    if (caller.ignoreFetch < caller.requestId) {\r\n                        this.addDataToStream(caller, force);\r\n                    }\r\n                }, (error) => {\r\n                    caller.cancelOngoingFetch();\r\n                    this.onDataFail(caller, error);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    loadPortHasChanged(caller) {\r\n        const loadPort = caller.loadPort;\r\n        const pxLoadPort = caller.pxLoadPort;\r\n        return (!loadPort.isZero && !loadPort.equals(caller.fixedLoadPort)) ||\r\n            (!pxLoadPort.isZero && !pxLoadPort.equals(caller.fixedPxLoadPort));\r\n    }\r\n    readPropertiesFromResponse(caller, value) {\r\n        caller.totalCells = new Vec2().set(value.totalCells);\r\n        this._usePx = !!value.pxScope;\r\n        if (this._usePx) {\r\n            caller.totalPx.set(value.totalPx);\r\n        }\r\n        if (value.cellsPerPage) {\r\n            this._pageStore.setPageSize(value.cellsPerPage);\r\n        }\r\n        this._pageStore.readPropertiesFromResponse(value);\r\n    }\r\n    register(config) {\r\n        const result = new CallerHandle(this._handleCounter, this, config);\r\n        this._handleCounter += 1;\r\n        this._callers.push(result.internal);\r\n        return result;\r\n    }\r\n    fetchData(caller) {\r\n        const dto = this.createRequestDTO(caller);\r\n        caller.requestId = this._requestCounter;\r\n        let data;\r\n        caller.cancelOngoingFetch();\r\n        return this._endPointFn(dto);\r\n    }\r\n    createRequestDTO(caller) {\r\n        let pxRequest = null;\r\n        let cellRequest = null;\r\n        let pageRequest = null;\r\n        if (!caller.pxViewPort.isZero) {\r\n            pageRequest = this._pageStore.pxRangeToPageRange(caller.pxLoadPort);\r\n        }\r\n        else {\r\n            pageRequest = this._pageStore.cellRangeToPageRange(caller.loadPort);\r\n        }\r\n        pageRequest = this._pageStore.limitPagesToLoad(pageRequest);\r\n        cellRequest = this._pageStore.pageRangeToCellRange(pageRequest);\r\n        const result = new DataStoreRequestDto().init({\r\n            sourceId: this._id,\r\n            requestId: this._requestCounter,\r\n            cellRequest\r\n        });\r\n        this._requestCounter += 1;\r\n        return result;\r\n    }\r\n    onDataFail(caller, reason) {\r\n        throw new Error(\"Not Implemented\");\r\n    }\r\n    addDataToStream(caller, force = false) {\r\n        if (!this.viewPortIsAlreadyStreamed(caller) || force) {\r\n            caller.fixLoadPort();\r\n            const loadPort = this._pageStore.getLoadPort(caller);\r\n            const rows = this._pageStore.assembleDataFromPages(caller);\r\n            let pxScope = null;\r\n            if (this._usePx) {\r\n                pxScope = this.calculatePxRangeFromCellRange(loadPort);\r\n            }\r\n            let result = new DataStoreConsumable();\r\n            result.init({ totalCells: this._pageStore.totalCells, totalPx: this._pageStore.totalPx, loadPort, rows, pxScope });\r\n            caller.stream.next(result);\r\n        }\r\n    }\r\n    viewPortIsAlreadyStreamed(caller) {\r\n        return (!caller.viewPort.isZero && caller.fixedLoadPort.contains(caller.viewPort)) ||\r\n            (!caller.pxViewPort.isZero && caller.fixedPxLoadPort.contains(caller.pxViewPort));\r\n    }\r\n    calculatePxRangeFromCellRange(loadPort) {\r\n        let result = new Rect();\r\n        const dataPages = this._pageStore.getDataPagesForCellPort(loadPort);\r\n        const loadRect = loadPort.toRect();\r\n        let startPx = dataPages[0].pxScope.start.clone();\r\n        let stopPx = dataPages[dataPages.length - 1].pxScope.stop.clone();\r\n        let leftIndex = dataPages[0].r[0].c[0].i.x;\r\n        let rightIndex = dataPages[0].r[0].c[dataPages[0].r[0].c.length - 1].i.x;\r\n        let topIndex = dataPages[0].r[0].i;\r\n        let bottomIndex = dataPages[dataPages.length - 1].r[dataPages[dataPages.length - 1].r.length - 1].i;\r\n        let cells = Arr.shallowCopy(dataPages[0].r[0].c);\r\n        Arr.until(cells, (cell, i) => i + leftIndex >= loadRect.start.x, (cell, i) => startPx.x += cell.w);\r\n        Arr.reverse(cells);\r\n        Arr.until(cells, (cell, i) => rightIndex - i >= loadRect.start.x, (cell, i) => stopPx.x -= cell.w);\r\n        let rows = Arr.shallowCopy(dataPages[0].r);\r\n        Arr.until(rows, (row, i) => i + topIndex >= loadRect.start.y, (row, i) => startPx.y += row.h);\r\n        Arr.reverse(rows);\r\n        Arr.until(rows, (row, i) => rightIndex - i >= loadRect.start.y, (row, i) => stopPx.y -= row.h);\r\n        result.start = startPx;\r\n        result.stop = stopPx;\r\n        return result;\r\n    }\r\n}\r\nDataStore.DEFAULT_CONFIG = {\r\n    pageSize: new Vec2(10, 10),\r\n    retainSize: 10,\r\n    endPointFn: null\r\n};\r\n//# sourceMappingURL=DataStore.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Initable, Range2, Vec2 } from \"goodcore\";\r\nlet RequestConfig = class RequestConfig {\r\n    constructor() {\r\n        this._viewPort = new Range2();\r\n        this._pxViewPort = new Range2();\r\n        this._requestMargin = new Vec2(0, 0);\r\n        this._loadPort = new Range2();\r\n        this._pxLoadPort = new Range2();\r\n        this._pxRequestMargin = new Vec2(0, 0);\r\n    }\r\n    init(obj) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    get viewPort() {\r\n        return this._viewPort;\r\n    }\r\n    set viewPort(v) {\r\n        this._viewPort.set(v);\r\n        this._loadPort = this.calculateLoadPort(this._viewPort, this._requestMargin);\r\n        this._pxViewPort.zero();\r\n        this._pxLoadPort.zero();\r\n    }\r\n    get requestMargin() {\r\n        return this._requestMargin;\r\n    }\r\n    set requestMargin(v) {\r\n        this._requestMargin.set(v);\r\n        this._loadPort = this.calculateLoadPort(this._viewPort, this._requestMargin);\r\n    }\r\n    get pxViewPort() {\r\n        return this._pxViewPort;\r\n    }\r\n    set pxViewPort(v) {\r\n        this._pxViewPort.set(v);\r\n        this._pxLoadPort = this.calculateLoadPort(this._pxViewPort, this._pxRequestMargin);\r\n        this._viewPort.zero();\r\n        this._loadPort.zero();\r\n    }\r\n    get pxRequestMargin() {\r\n        return this._pxRequestMargin;\r\n    }\r\n    set pxRequestMargin(v) {\r\n        this._pxRequestMargin.set(v);\r\n        this._pxLoadPort = this.calculateLoadPort(this._pxViewPort, this._pxRequestMargin);\r\n    }\r\n    get loadPort() {\r\n        return this._loadPort;\r\n    }\r\n    set loadPort(v) {\r\n        this._loadPort.set(v);\r\n        this._pxLoadPort.zero();\r\n    }\r\n    get pxLoadPort() {\r\n        return this._pxLoadPort;\r\n    }\r\n    set pxLoadPort(v) {\r\n        this._pxLoadPort.set(v);\r\n        this._loadPort.zero();\r\n    }\r\n    calculateLoadPort(viewPort, requestMargin) {\r\n        let result = viewPort.clone();\r\n        result.pos.subtract(requestMargin);\r\n        result.size.add(requestMargin.clone().multiply(2));\r\n        let underflow = result.pos.clone().invert().max({ x: 0, y: 0 });\r\n        result.pos.add(underflow);\r\n        result.size.subtract(underflow);\r\n        return result;\r\n    }\r\n};\r\nRequestConfig = __decorate([\r\n    Initable\r\n], RequestConfig);\r\nexport { RequestConfig };\r\n//# sourceMappingURL=RequestConfig.js.map"],"names":["CallerInternal","[object Object]","config","stream","this","_fixedLoadPort","Range2","_fixedPxLoadPort","totalCells","Vec2","totalPx","_config","_stream","fetchSubscription","ignoreFetch","requestId","v","loadPort","pxLoadPort","fixedLoadPort","fixedPxLoadPort","viewPort","equals","ignoreOngoingFetch","pxViewPort","isZero","set","zero","unsubscribe","limitPortByTotal","port","total","x","y","overflow","toRect","stop","subtract","max","size","CallerHandle","id","store","_force","_id","_store","BehaviorSubject","_internal","internal","requestMargin","readConfig","load","Error","undefined","forceStream","__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","DataStoreConsumable","pxScope","Rect","rows","obj","Initable","DataStoreRequestDto","__metadata","k","metadata","DataRow","h","Array","pool","Poolable","Number","DataPage","_r","_pxScope","_cellSize","cellSize","initData","result","push","j","Math","min","PageStore","pageSize","retainSize","pagePxRanges","isDebug","_usePx","_dummyRect","_pagePool","Pool","_pageLookup","Dictionary","_requestedPages","_pageQueue","_cellsPerPage","_pagesPerCell","setPageSize","_retainSize","_totalPages","_totalCells","_totalPx","_pagePxRanges","totalPages","emptyPageStore","caller","hasLoadPort","hasPxLoadPort","cellRangeToPageRange","pxRangeToPageRange","first","p","has","pageRange","clone","pages","isNew","start","pos","cellSpaceToPageSpaceX","cellSpaceToPageSpaceY","pixels","Util","assert","x1","pageX1","Arr","binarySearch","el","s","y1","pageY1","x2","pageX2","y2","pageY2","toRange2","cells","rect","translate","toInt","ceil","getDataPagesForPageRange","indexX1","until","w","indexY1","indexX2","indexY2","callers","payload","partitionDataIntoPages","dataPort","forEach","insertPage","cleanPageStore","scale","shiftPageQueue","locked","calculateLockedPages","retainCount","list","count","reverse","reverseUntil","removePageFromQueue","page","remove","deletePageById","release","toRemove","shift","pageId","delete","data","cellPort","pageRect","pageCountY","pageY","pageCountX","pageX","dataPage","get","pagePxX","pagePxY","pagePxScope","dataStartY","dataStartX","dataLimitY","dataLimitX","pageRowNum","row","pageRow","pageColNum","removeOneByFn","unique","flatten","map","getPageIdsForViewPort","getLoadPort","loop","dataPages","getDataPages","loadRect","viewSpace","modelSpace","pageSpace","innerPageSpace","dataPageNum","modelRowCount","modelColCount","relativePageSpace","cellSpaceToInnerPageSpaceY","rowInfo","init","cellSpaceToInnerPageSpaceX","pxRangeToCellRange","getDataPagesForCellPort","getDataPagesForPxPort","DataStore","newUUID","_requestCounter","_handleCounter","_callers","_pageStore","_endPointFn","endPointFn","DEFAULT_CONFIG","force","Test","isFunction","loadPortHasChanged","limitLoadPortByTotalCells","limitPxLoadPortByTotalPx","isRequestedDataLoaded","addDataToStream","fetchData","subscribe","value","readPropertiesFromResponse","addDataToPageStore","error","cancelOngoingFetch","onDataFail","cellsPerPage","dto","createRequestDTO","cellRequest","pageRequest","limitPagesToLoad","pageRangeToCellRange","sourceId","reason","viewPortIsAlreadyStreamed","fixLoadPort","assembleDataFromPages","calculatePxRangeFromCellRange","next","contains","startPx","stopPx","leftIndex","rightIndex","topIndex","shallowCopy","cell","RequestConfig","_viewPort","_pxViewPort","_requestMargin","_loadPort","_pxLoadPort","_pxRequestMargin","calculateLoadPort","pxRequestMargin","add","multiply","underflow","invert"],"mappings":"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"}