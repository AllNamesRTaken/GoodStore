{"version":3,"file":"goodstore.es6.min.js","sources":["lib/CallerInternal.js","lib/CallerHandle.js","lib/DataStoreConsumable.js","lib/Dto/DataStoreRequestDto.js","lib/DataRow.js","lib/DataPage.js","lib/PageStore.js","lib/DataStore.js","lib/RequestConfig.js"],"sourcesContent":["import { Rect, Range2, Vec2 } from \"goodcore\";\nexport class CallerInternal {\n    constructor(config, stream) {\n        this._fixedLoadPort = new Range2();\n        this._fixedPxLoadPort = new Range2();\n        this.totalCells = new Vec2(-1, -1);\n        this.totalPx = new Vec2(-1, -1);\n        this._config = config;\n        this._stream = stream;\n        this.fetchSubscription = null;\n        this.ignoreFetch = -1;\n        this.requestId = -1;\n    }\n    get config() {\n        return this._config;\n    }\n    set config(v) {\n        this._config = v;\n    }\n    get stream() {\n        return this._stream;\n    }\n    get loadPort() {\n        return this.config.loadPort;\n    }\n    set loadPort(v) {\n        this.config.loadPort = v;\n    }\n    get pxLoadPort() {\n        return this.config.pxLoadPort;\n    }\n    set pxLoadPort(v) {\n        this.config.pxLoadPort = v;\n    }\n    get fixedLoadPort() {\n        return this._fixedLoadPort;\n    }\n    get fixedPxLoadPort() {\n        return this._fixedLoadPort;\n    }\n    get viewPort() {\n        return this.config.viewPort;\n    }\n    set viewPort(v) {\n        if (!this.config.viewPort.equals(v)) {\n            this.ignoreOngoingFetch();\n        }\n        this.config.viewPort = v;\n    }\n    get pxViewPort() {\n        return this.config.pxViewPort;\n    }\n    set pxViewPort(v) {\n        if (!this.config.pxViewPort.equals(v)) {\n            this.ignoreOngoingFetch();\n        }\n        this.config.pxViewPort = v;\n    }\n    fixLoadPort() {\n        if (this.config.pxLoadPort.isZero) {\n            this._fixedLoadPort.set(this.config.loadPort);\n            this._fixedPxLoadPort.zero();\n        }\n        else {\n            this._fixedPxLoadPort.set(this.config.pxLoadPort);\n            this._fixedLoadPort.zero();\n        }\n    }\n    ignoreOngoingFetch() {\n        if (this.fetchSubscription !== null) {\n            this.ignoreFetch = this.requestId;\n        }\n    }\n    cancelOngoingFetch() {\n        if (this.fetchSubscription !== null) {\n            this.fetchSubscription.unsubscribe();\n            this.fetchSubscription = null;\n        }\n    }\n    limitLoadPortByTotalCells() {\n        this.limitPortByTotal(this.loadPort, this.totalCells);\n    }\n    limitPxLoadPortByTotalPx() {\n        this.limitPortByTotal(this.pxLoadPort, this.totalPx);\n    }\n    limitPortByTotal(port, total) {\n        if (!port.isZero && !total.equals({ x: -1, y: -1 })) {\n            let overflow = new Rect().fromRange2(port).stop.subtract(total).max(new Vec2(0, 0));\n            port.size.subtract(overflow);\n        }\n    }\n}\n//# sourceMappingURL=CallerInternal.js.map","import { BehaviorSubject } from \"rxjs/BehaviorSubject\";\nimport { CallerInternal } from \"./CallerInternal\";\nexport class CallerHandle {\n    constructor(id, store, config) {\n        this._force = false;\n        this._id = id;\n        this._store = store;\n        this._stream = new BehaviorSubject(null);\n        this._internal = new CallerInternal(config, this._stream);\n    }\n    get internal() {\n        return this._internal;\n    }\n    get stream() {\n        return this._stream;\n    }\n    get viewPort() {\n        return this._internal.viewPort;\n    }\n    set viewPort(v) {\n        this._internal.viewPort = v;\n    }\n    get pxViewPort() {\n        return this._internal.pxViewPort;\n    }\n    set pxViewPort(v) {\n        this._internal.pxViewPort = v;\n    }\n    get requestMargin() {\n        return this._internal.config.requestMargin;\n    }\n    set requestMargin(v) {\n        this._internal.config.requestMargin = v;\n    }\n    load(config) {\n        this.readConfig(config);\n        this._store.load(this.internal, this._force);\n    }\n    unregister() {\n        throw new Error(\"not implemented\");\n    }\n    readConfig(config) {\n        if (config !== undefined) {\n            if (config.requestMargin !== undefined) {\n                this.internal.config.requestMargin = config.requestMargin;\n            }\n            if (config.viewPort !== undefined) {\n                this.viewPort = config.viewPort;\n            }\n            if (config.pxViewPort !== undefined) {\n                this.pxViewPort = config.pxViewPort;\n            }\n            this._force = config.forceStream === true;\n        }\n    }\n}\n//# sourceMappingURL=CallerHandle.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Initable, Rect, Vec2 } from \"goodcore\";\nlet DataStoreConsumable = class DataStoreConsumable {\n    constructor() {\n        this.totalCells = new Vec2();\n        this.totalPx = new Vec2();\n        this.loadPort = null;\n        this.pxScope = new Rect();\n        this.rows = null;\n    }\n    init(obj, mapping) {\n        throw new Error(\"Method not implemented.\");\n    }\n};\nDataStoreConsumable = __decorate([\n    Initable\n], DataStoreConsumable);\nexport { DataStoreConsumable };\n//# sourceMappingURL=DataStoreConsumable.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Initable } from \"goodcore\";\nlet DataStoreRequestDto = class DataStoreRequestDto {\n    constructor() {\n        this.sourceId = \"\";\n        this.requestId = 0;\n        this.cellRequest = null;\n    }\n    init(obj, mapping) {\n        throw new Error(\"Method not implemented.\");\n    }\n};\nDataStoreRequestDto = __decorate([\n    Initable\n], DataStoreRequestDto);\nexport { DataStoreRequestDto };\n//# sourceMappingURL=DataStoreRequestDto.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Initable, Poolable } from \"goodcore\";\nlet DataRow = class DataRow {\n    constructor(length = 0) {\n        this.i = 0;\n        this.h = 0;\n        this.d = null;\n        this.c = new Array(length);\n    }\n    release() {\n        throw new Error(\"Method not implemented.\");\n    }\n    initPool(pool) {\n        throw new Error(\"Method not implemented.\");\n    }\n    init(obj, mapping) {\n        throw new Error(\"Method not implemented.\");\n    }\n};\nDataRow = __decorate([\n    Poolable,\n    Initable,\n    __metadata(\"design:paramtypes\", [Number])\n], DataRow);\nexport { DataRow };\n//# sourceMappingURL=DataRow.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Initable, Poolable, Rect, Vec2 } from \"goodcore\";\nimport { DataRow } from \"./DataRow\";\nlet DataPage = class DataPage {\n    constructor() {\n        this._id = 0;\n        this._r = [];\n        this._pxScope = new Rect();\n        this._cellSize = new Vec2();\n        this._r = new Array();\n    }\n    init(obj, mapping) {\n        throw new Error(\"Method not implemented.\");\n    }\n    release() {\n        throw new Error(\"Method not implemented.\");\n    }\n    initPool(pool) {\n        throw new Error(\"Method not implemented.\");\n    }\n    get id() {\n        return this._id;\n    }\n    set id(v) {\n        this._id = v;\n    }\n    get r() {\n        return this._r;\n    }\n    get pxScope() {\n        return this._pxScope;\n    }\n    set pxScope(v) {\n        this._pxScope.set(v);\n    }\n    get cellSize() {\n        return this._cellSize;\n    }\n    set cellSize(v) {\n        this._cellSize.set(v);\n        this.initData(v);\n    }\n    addRow() {\n        const result = new DataRow();\n        this._r.push(result);\n        return result;\n    }\n    initData(size) {\n        let i = -1;\n        if (this._r === undefined) {\n            this._r = [];\n        }\n        let r = this._r;\n        let j = r.length - 1;\n        let k = Math.min(j, size.y);\n        while (++j < size.y) {\n            r.push(new DataRow(size.x));\n        }\n        if (r.length !== size.y) {\n            r.length = size.y;\n        }\n        while (++i < k) {\n            r[i].c.length = size.x;\n        }\n    }\n};\nDataPage = __decorate([\n    Poolable,\n    Initable,\n    __metadata(\"design:paramtypes\", [])\n], DataPage);\nexport { DataPage };\n//# sourceMappingURL=DataPage.js.map","import { DataRow } from \"./DataRow\";\nimport { Arr, Dictionary, Pool, Range2, Rect, Util, Vec2 } from \"goodcore\";\nimport { DataPage } from \"./DataPage\";\nexport class PageStore {\n    constructor(pageSize, retainSize, pagePxRanges = null) {\n        this.isDebug = true;\n        this._usePx = true;\n        this._dummyRect = new Rect();\n        this._pagePool = new Pool(DataPage);\n        this._pageLookup = new Dictionary();\n        this._requestedPages = new Dictionary();\n        this._pageQueue = new Array();\n        this._cellsPerPage = new Vec2();\n        this._pagesPerCell = new Vec2();\n        this.setPageSize(pageSize);\n        this._retainSize = retainSize;\n        this._totalPages = new Vec2();\n        this._totalCells = new Vec2();\n        this._totalPx = new Vec2();\n        this._pagePxRanges = pagePxRanges;\n        this._usePx = pagePxRanges !== null;\n    }\n    get totalPx() {\n        return this._totalPx;\n    }\n    get totalCells() {\n        return this._totalCells;\n    }\n    get totalPages() {\n        return this._totalPages;\n    }\n    setPageSize(v) {\n        if (!this._cellsPerPage.equals(v)) {\n            this.emptyPageStore();\n        }\n        this._cellsPerPage.set(v);\n        this._pagesPerCell.x = 1 / v.x;\n        this._pagesPerCell.y = 1 / v.y;\n    }\n    isRequestedDataLoaded(caller) {\n        let result = false;\n        const hasLoadPort = !caller.loadPort.isZero;\n        const hasPxLoadPort = !caller.pxLoadPort.isZero;\n        if (hasLoadPort || hasPxLoadPort) {\n            const pages = hasLoadPort ?\n                this.cellRangeToPageRange(caller.loadPort) :\n                this.pxRangeToPageRange(caller.pxLoadPort);\n            result = pages.first((p) => !this._pageLookup.has(p.y * this._totalPages.x + p.x)) === null;\n        }\n        return result;\n    }\n    limitPagesToLoad(pageRange) {\n        const result = pageRange.clone();\n        const pages = new Rect().fromRange2(pageRange);\n        let isNew = false;\n        for (let i = pages.start.y; i < pages.stop.y; i += 1) {\n            for (let j = pages.start.x; j < pages.stop.x; j += 1) {\n                if (!this._pageLookup.has(i * this._cellsPerPage.x + j)\n                    && !this._requestedPages.has(i * this._cellsPerPage.x + j)) {\n                    isNew = true;\n                    break;\n                }\n            }\n            if (isNew) {\n                break;\n            }\n            result.pos.y += 1;\n            result.size.y -= 1;\n        }\n        isNew = false;\n        for (let i = pages.stop.y; i > pages.start.y; i -= 1) {\n            for (let j = pages.start.x; j < pages.stop.x; j += 1) {\n                if (!this._pageLookup.has(i * this._cellsPerPage.x + j)\n                    && !this._requestedPages.has(i * this._cellsPerPage.x + j)) {\n                    isNew = true;\n                    break;\n                }\n            }\n            if (isNew) {\n                break;\n            }\n            result.size.y -= 1;\n        }\n        isNew = false;\n        for (let i = pages.start.x; i < pages.stop.x; i += 1) {\n            for (let j = pages.start.y; j < pages.stop.y; j += 1) {\n                if (!this._pageLookup.has(j * this._cellsPerPage.x + i)\n                    && !this._requestedPages.has(j * this._cellsPerPage.x + i)) {\n                    isNew = true;\n                    break;\n                }\n            }\n            if (isNew) {\n                break;\n            }\n            result.pos.x += 1;\n            result.size.x -= 1;\n        }\n        isNew = false;\n        for (let i = pages.stop.x; i > pages.start.x; i -= 1) {\n            for (let j = pages.start.y; j < pages.stop.y; j += 1) {\n                if (!this._pageLookup.has(j * this._cellsPerPage.x + i)\n                    && !this._requestedPages.has(j * this._cellsPerPage.x + i)) {\n                    isNew = true;\n                    break;\n                }\n            }\n            if (isNew) {\n                break;\n            }\n            result.size.x -= 1;\n        }\n        return result;\n    }\n    cellSpaceToPageSpaceX(v) {\n        return (v / this._cellsPerPage.x) | 0;\n    }\n    cellSpaceToPageSpaceY(v) {\n        return (v / this._cellsPerPage.y) | 0;\n    }\n    cellSpaceToInnerPageSpaceX(v) {\n        return v - (this._cellsPerPage.x * this.cellSpaceToPageSpaceX(v));\n    }\n    cellSpaceToInnerPageSpaceY(v) {\n        return v - (this._cellsPerPage.y * this.cellSpaceToPageSpaceY(v));\n    }\n    pxRangeToPageRange(pixels) {\n        Util.assert(!!this._pagePxRanges.x && !!this._pagePxRanges.y, \"pagePxRanges does not contain valid ranges\");\n        let x1 = pixels.pos.x;\n        let pageX1 = Arr.binarySearch(this._pagePxRanges.x, (el) => {\n            return (el.p + el.s <= x1) ? -1 :\n                (el.p > x1) ? 1 :\n                    0;\n        });\n        let y1 = pixels.pos.y;\n        let pageY1 = Arr.binarySearch(this._pagePxRanges.y, (el) => {\n            return (el.p + el.s <= y1) ? -1 :\n                (el.p > y1) ? 1 :\n                    0;\n        });\n        let x2 = pixels.pos.x + pixels.size.x - 1;\n        let pageX2 = Arr.binarySearch(this._pagePxRanges.x, (el) => {\n            return (el.p + el.s <= x2) ? -1 :\n                (el.p > x2) ? 1 :\n                    0;\n        });\n        let y2 = pixels.pos.y + pixels.size.y - 1;\n        let pageY2 = Arr.binarySearch(this._pagePxRanges.y, (el) => {\n            return (el.p + el.s <= y2) ? -1 :\n                (el.p > y2) ? 1 :\n                    0;\n        });\n        let pages = new Range2().fromRect(new Rect(pageX1, pageY1, pageX2, pageY2, true));\n        return pages;\n    }\n    cellRangeToPageRange(cells) {\n        let pages = new Range2().set(cells);\n        const rect = this._dummyRect.fromRange2(pages).translate(this._pagesPerCell);\n        rect.start.toInt();\n        rect.stop.ceil();\n        pages.fromRect(rect);\n        return pages;\n    }\n    pageRangeToCellRange(pages) {\n        return (new Range2()).set(pages).translate(this._cellsPerPage).toInt();\n    }\n    pxRangeToCellRange(pixels) {\n        const pageRange = this.pxRangeToPageRange(pixels);\n        const pages = this.getDataPagesForPageRange(pageRange);\n        let pos = pages[0].pxScope.start.clone();\n        let indexX1 = 0;\n        Arr.until(pages[0].r[0].c, (el, i) => pixels.pos.x < pos.x + el.w, (el, i) => { pos.x += el.w; ++indexX1; });\n        let indexY1 = 0;\n        Arr.until(pages[0].r, (el, i) => pixels.pos.y < pos.y + el.h, (el, i) => { pos.y += el.h; ++indexY1; });\n        pos = pages[pages.length - 1].pxScope.start.clone();\n        let indexX2 = 0;\n        Arr.until(pages[pages.length - 1].r[0].c, (el, i) => pixels.pos.x + pixels.size.x - 1 < pos.x + el.w, (el, i) => { pos.x += el.w; ++indexX2; });\n        let indexY2 = 0;\n        Arr.until(pages[pages.length - 1].r, (el, i) => pixels.pos.y + pixels.size.y - 1 < pos.y + el.h, (el, i) => { pos.y += el.h; ++indexY2; });\n        let start = pages[0].r[indexY1].c[indexX1].i;\n        let stop = pages[pages.length - 1].r[indexY2].c[indexX2].i;\n        let result = new Range2().fromRect(new Rect(start.x, start.y, stop.x, stop.y, true));\n        return result;\n    }\n    addDataToPageStore(callers, payload) {\n        const pages = this.partitionDataIntoPages(payload.r, payload.dataPort, payload.pxScope);\n        pages.forEach((p) => this.insertPage(p));\n        this.cleanPageStore(callers);\n    }\n    readPropertiesFromResponse(payload) {\n        if (!this._totalCells.equals(payload.totalCells)) {\n            this._totalPages.set(payload.totalCells).scale(this._pagesPerCell);\n            this._totalCells.set(payload.totalCells);\n            if (this._usePx) {\n                this._totalPx.set(payload.totalPx);\n            }\n        }\n    }\n    emptyPageStore() {\n        while (this._pageQueue.length > 0) {\n            this.shiftPageQueue();\n        }\n    }\n    cleanPageStore(callers) {\n        let locked = this.calculateLockedPages(callers);\n        let retainCount = Math.max(this._retainSize, locked.values.length);\n        Arr.reverse(this._pageQueue);\n        Arr.reverseUntil(this._pageQueue, (el, i) => this._pageQueue.length <= retainCount, (el, i) => {\n            if (!locked.has(\"\" + this._pageQueue[i].id)) {\n                this.removePageFromQueue(this._pageQueue[i]);\n            }\n        });\n        Arr.reverse(this._pageQueue);\n    }\n    removePageFromQueue(page) {\n        Arr.remove(this._pageQueue, page);\n        this.deletePageById(page.id);\n        page.release();\n    }\n    shiftPageQueue() {\n        const toRemove = this._pageQueue.shift();\n        this.deletePageById(toRemove.id);\n        toRemove.release();\n    }\n    deletePageById(pageId) {\n        const exists = this._pageLookup.has(pageId);\n        if (exists) {\n            this._pageLookup.delete(pageId);\n        }\n    }\n    partitionDataIntoPages(data, cellPort, pxScope) {\n        const pageRect = new Rect().fromRange2(this.cellRangeToPageRange(cellPort));\n        const result = new Array();\n        let pageCountY = 0;\n        for (let pageY = pageRect.start.y; pageY < pageRect.stop.y; ++pageY) {\n            let pageCountX = 0;\n            for (let pageX = pageRect.start.x; pageX < pageRect.stop.x; ++pageX) {\n                const id = (pageY * this._totalPages.x) + pageX;\n                const isNewPage = !this._pageLookup.has(id);\n                if (isNewPage) {\n                    const dataPage = this._pagePool.get();\n                    dataPage.id = id;\n                    dataPage.cellSize = this._cellsPerPage;\n                    if (this._usePx) {\n                        let pagePxX = this._pagePxRanges.x[pageX];\n                        let pagePxY = this._pagePxRanges.y[pageY];\n                        let pagePxScope = dataPage.pxScope;\n                        pagePxScope.start.x = pagePxX.p;\n                        pagePxScope.start.y = pagePxY.p;\n                        pagePxScope.stop.x = pagePxX.p + pagePxX.s - 1;\n                        pagePxScope.stop.y = pagePxY.p + pagePxY.s - 1;\n                    }\n                    result.push(dataPage);\n                    const dataStartY = pageCountY * this._cellsPerPage.y;\n                    const dataStartX = pageCountX * this._cellsPerPage.x;\n                    const dataLimitY = dataStartY + this._cellsPerPage.y;\n                    const dataLimitX = dataStartX + this._cellsPerPage.x;\n                    let pageRowNum = 0;\n                    for (let i = dataStartY; i < dataLimitY && i < data.length; ++i) {\n                        const row = data[i];\n                        const pageRow = dataPage.r[pageRowNum];\n                        pageRow.h = row.h;\n                        pageRow.i = row.i;\n                        pageRow.d = row.d;\n                        let pageColNum = 0;\n                        for (let j = dataStartX; j < dataLimitX && j < row.c.length; ++j) {\n                            pageRow.c[pageColNum] = row.c[j];\n                            ++pageColNum;\n                        }\n                        ++pageRowNum;\n                    }\n                }\n                ++pageCountX;\n            }\n            ++pageCountY;\n        }\n        return result;\n    }\n    insertPage(page) {\n        const isNew = !this._pageLookup.has(page.id);\n        if (!isNew) {\n            Arr.removeOneByFn(this._pageQueue, function (el) {\n                return el.id === page.id;\n            });\n        }\n        this._pageQueue.push(page);\n        this._pageLookup.set(page.id, page);\n    }\n    calculateLockedPages(callers) {\n        let unique = new Dictionary();\n        Arr.forEach(Arr.flatten(Arr.map(callers, (caller) => {\n            return this.getPageIdsForViewPort(caller.loadPort);\n        })), (id) => unique.set(id, id));\n        return unique;\n    }\n    assembleDataFromPages(caller) {\n        const result = new Array();\n        let loadPort = this.getLoadPort(caller);\n        Util.loop(loadPort.size.y, (i) => result.push(new DataRow(loadPort.size.x)));\n        const dataPages = this.getDataPages(caller);\n        const loadRect = new Rect().fromRange2(loadPort);\n        const pageRange = this.cellRangeToPageRange(loadPort);\n        const viewSpace = new Vec2();\n        const modelSpace = new Vec2();\n        const pageSpace = new Vec2();\n        const innerPageSpace = new Vec2();\n        let dataPageNum;\n        const modelRowCount = result.length;\n        const modelColCount = result[0] === undefined ? 0 : result[0].c.length;\n        const relativePageSpace = new Vec2();\n        for (viewSpace.y = loadRect.start.y; viewSpace.y < loadRect.stop.y && modelSpace.y < modelRowCount; viewSpace.y += 1, modelSpace.y += 1) {\n            pageSpace.y = this.cellSpaceToPageSpaceY(viewSpace.y);\n            modelSpace.x = 0;\n            innerPageSpace.y = this.cellSpaceToInnerPageSpaceY(viewSpace.y);\n            relativePageSpace.set(pageSpace).subtract(pageRange.pos);\n            dataPageNum = relativePageSpace.y * pageRange.size.x + relativePageSpace.x;\n            let rowInfo = dataPages[dataPageNum].r[innerPageSpace.y];\n            result[modelSpace.y].init({ i: rowInfo.i, h: rowInfo.h, d: rowInfo.d });\n            for (viewSpace.x = loadRect.start.x; viewSpace.x < loadRect.stop.x && modelSpace.x < modelColCount; viewSpace.x += 1, modelSpace.x += 1) {\n                pageSpace.x = this.cellSpaceToPageSpaceX(viewSpace.x);\n                innerPageSpace.x = this.cellSpaceToInnerPageSpaceX(viewSpace.x);\n                innerPageSpace.y = this.cellSpaceToInnerPageSpaceY(viewSpace.y);\n                relativePageSpace.set(pageSpace).subtract(pageRange.pos);\n                dataPageNum = relativePageSpace.y * pageRange.size.x + relativePageSpace.x;\n                result[modelSpace.y].c[modelSpace.x] = dataPages[dataPageNum].r[innerPageSpace.y].c[innerPageSpace.x];\n            }\n        }\n        return result;\n    }\n    getPageIdsForViewPort(viewPort) {\n        const pages = this.cellRangeToPageRange(viewPort);\n        const result = [];\n        pages.forEach((p) => {\n            const pos = p.y * this._cellsPerPage.x + p.x;\n            if (this._pageLookup.has(pos)) {\n                result.push(this._pageLookup.get(pos).id);\n            }\n            return false;\n        });\n        return result;\n    }\n    getLoadPort(caller) {\n        let byCells = !caller.loadPort.isZero;\n        return byCells ?\n            caller.loadPort :\n            this.pxRangeToCellRange(caller.pxLoadPort);\n    }\n    getDataPages(caller) {\n        let byCells = !caller.loadPort.isZero;\n        return byCells ?\n            this.getDataPagesForCellPort(caller.loadPort) :\n            this.getDataPagesForPxPort(caller.pxLoadPort);\n    }\n    getDataPagesForCellPort(port) {\n        const pages = this.cellRangeToPageRange(port);\n        return this.getDataPagesForPageRange(pages);\n    }\n    getDataPagesForPxPort(port) {\n        const pages = this.pxRangeToPageRange(port);\n        return this.getDataPagesForPageRange(pages);\n    }\n    getDataPagesForPageRange(pages) {\n        const result = new Array();\n        pages.forEach((p) => {\n            const pos = p.y * this._totalPages.x + p.x;\n            if (this._pageLookup.has(pos)) {\n                result.push(this._pageLookup.get(pos));\n            }\n            return false;\n        });\n        return result;\n    }\n}\n//# sourceMappingURL=PageStore.js.map","import { Arr, Rect, Test, Util, Vec2 } from \"goodcore\";\nimport { CallerHandle } from \"./CallerHandle\";\nimport { DataStoreConsumable } from \"./DataStoreConsumable\";\nimport { DataStoreRequestDto } from \"./Dto/DataStoreRequestDto\";\nimport { PageStore } from \"./PageStore\";\nexport class DataStore {\n    constructor(config) {\n        this.isDebug = true;\n        this._id = Util.newUUID();\n        this._usePx = true;\n        this._requestCounter = 0;\n        this._handleCounter = 0;\n        this._callers = [];\n        this._pageStore = null;\n        this._endPointFn = config.endPointFn ? config.endPointFn : DataStore.DEFAULT_CONFIG.endPointFn;\n        this._pageStore = new PageStore(config.pageSize || DataStore.DEFAULT_CONFIG.pageSize, config.retainSize ? config.retainSize : DataStore.DEFAULT_CONFIG.retainSize, config.pagePxRanges);\n    }\n    load(caller, force = false) {\n        Util.assert(Test.isFunction(this._endPointFn), \"EndPoint is valid function\", this.isDebug);\n        Util.assert(caller.viewPort !== undefined, \"ViewPort is defined\", this.isDebug);\n        if (this.loadPortHasChanged(caller) || force) {\n            caller.limitLoadPortByTotalCells();\n            caller.limitPxLoadPortByTotalPx();\n            if (this._pageStore.isRequestedDataLoaded(caller)) {\n                this.addDataToStream(caller, force);\n                this._pageStore.cleanPageStore(this._callers);\n            }\n            else {\n                caller.fetchSubscription = this.fetchData(caller).subscribe((value) => {\n                    if (!Util.assert(value !== undefined, \"Payload from server was empty in DataStore.load()\", this.isDebug)) {\n                        return;\n                    }\n                    this.readPropertiesFromResponse(caller, value);\n                    caller.limitLoadPortByTotalCells();\n                    caller.limitPxLoadPortByTotalPx();\n                    this._pageStore.addDataToPageStore(this._callers, value);\n                    if (caller.ignoreFetch < caller.requestId) {\n                        this.addDataToStream(caller, force);\n                    }\n                }, (error) => {\n                    caller.cancelOngoingFetch();\n                    this.onDataFail(caller, error);\n                });\n            }\n        }\n    }\n    loadPortHasChanged(caller) {\n        const loadPort = caller.loadPort;\n        const pxLoadPort = caller.pxLoadPort;\n        return (!loadPort.isZero && !loadPort.equals(caller.fixedLoadPort)) ||\n            (!pxLoadPort.isZero && !pxLoadPort.equals(caller.fixedPxLoadPort));\n    }\n    readPropertiesFromResponse(caller, value) {\n        caller.totalCells = new Vec2().set(value.totalCells);\n        this._usePx = !!value.pxScope;\n        if (this._usePx) {\n            caller.totalPx.set(value.totalPx);\n        }\n        if (value.cellsPerPage) {\n            this._pageStore.setPageSize(value.cellsPerPage);\n        }\n        this._pageStore.readPropertiesFromResponse(value);\n    }\n    register(config) {\n        const result = new CallerHandle(this._handleCounter, this, config);\n        this._handleCounter += 1;\n        this._callers.push(result.internal);\n        return result;\n    }\n    fetchData(caller) {\n        const dto = this.createRequestDTO(caller);\n        caller.requestId = this._requestCounter;\n        let data;\n        caller.cancelOngoingFetch();\n        return this._endPointFn(dto);\n    }\n    createRequestDTO(caller) {\n        let pxRequest = null;\n        let cellRequest = null;\n        let pageRequest = null;\n        if (!caller.pxViewPort.isZero) {\n            pageRequest = this._pageStore.pxRangeToPageRange(caller.pxLoadPort);\n        }\n        else {\n            pageRequest = this._pageStore.cellRangeToPageRange(caller.loadPort);\n        }\n        pageRequest = this._pageStore.limitPagesToLoad(pageRequest);\n        cellRequest = this._pageStore.pageRangeToCellRange(pageRequest);\n        let foo = new DataStoreRequestDto();\n        const result = new DataStoreRequestDto().init({\n            sourceId: this._id,\n            requestId: this._requestCounter,\n            cellRequest\n        });\n        this._requestCounter += 1;\n        return result;\n    }\n    onDataFail(caller, reason) {\n        throw new Error(\"Not Implemented\");\n    }\n    addDataToStream(caller, force = false) {\n        if (!this.viewPortIsAlreadyStreamed(caller) || force) {\n            caller.fixLoadPort();\n            const loadPort = this._pageStore.getLoadPort(caller);\n            const rows = this._pageStore.assembleDataFromPages(caller);\n            let pxScope = null;\n            if (this._usePx) {\n                pxScope = this.calculatePxRangeFromCellRange(loadPort);\n            }\n            let result = new DataStoreConsumable();\n            result.init({ totalCells: this._pageStore.totalCells, totalPx: this._pageStore.totalPx, loadPort, rows, pxScope });\n            caller.stream.next(result);\n        }\n    }\n    viewPortIsAlreadyStreamed(caller) {\n        return (!caller.viewPort.isZero && caller.fixedLoadPort.contains(caller.viewPort)) ||\n            (!caller.pxViewPort.isZero && caller.fixedPxLoadPort.contains(caller.pxViewPort));\n    }\n    calculatePxRangeFromCellRange(loadPort) {\n        let result = new Rect();\n        const dataPages = this._pageStore.getDataPagesForCellPort(loadPort);\n        const loadRect = new Rect().fromRange2(loadPort);\n        let startPx = dataPages[0].pxScope.start.clone();\n        let stopPx = dataPages[dataPages.length - 1].pxScope.stop.clone();\n        let leftIndex = dataPages[0].r[0].c[0].i.x;\n        let rightIndex = dataPages[0].r[0].c[dataPages[0].r[0].c.length - 1].i.x;\n        let topIndex = dataPages[0].r[0].i;\n        let bottomIndex = dataPages[dataPages.length - 1].r[dataPages[dataPages.length - 1].r.length - 1].i;\n        let cells = Arr.shallowCopy(dataPages[0].r[0].c);\n        Arr.until(cells, (cell, i) => i + leftIndex >= loadRect.start.x, (cell, i) => startPx.x += cell.w);\n        Arr.reverse(cells);\n        Arr.until(cells, (cell, i) => rightIndex - i >= loadRect.start.x, (cell, i) => stopPx.x -= cell.w);\n        let rows = Arr.shallowCopy(dataPages[0].r);\n        Arr.until(rows, (row, i) => i + topIndex >= loadRect.start.y, (row, i) => startPx.y += row.h);\n        Arr.reverse(rows);\n        Arr.until(rows, (row, i) => rightIndex - i >= loadRect.start.y, (row, i) => stopPx.y -= row.h);\n        result.start = startPx;\n        result.stop = stopPx;\n        return result;\n    }\n}\nDataStore.DEFAULT_CONFIG = {\n    pageSize: new Vec2(10, 10),\n    retainSize: 10,\n    endPointFn: null\n};\n//# sourceMappingURL=DataStore.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Initable, Range2, Vec2 } from \"goodcore\";\nlet RequestConfig = class RequestConfig {\n    constructor() {\n        this._viewPort = new Range2();\n        this._pxViewPort = new Range2();\n        this._requestMargin = new Vec2(0, 0);\n        this._loadPort = new Range2();\n        this._pxLoadPort = new Range2();\n        this._pxRequestMargin = new Vec2(0, 0);\n    }\n    init(obj, mapping) {\n        throw new Error(\"Method not implemented.\");\n    }\n    get viewPort() {\n        return this._viewPort;\n    }\n    set viewPort(v) {\n        this._viewPort.set(v);\n        this._loadPort = this.calculateLoadPort(this._viewPort, this._requestMargin);\n        this._pxViewPort.zero();\n        this._pxLoadPort.zero();\n    }\n    get requestMargin() {\n        return this._requestMargin;\n    }\n    set requestMargin(v) {\n        this._requestMargin.set(v);\n        this._loadPort = this.calculateLoadPort(this._viewPort, this._requestMargin);\n    }\n    get pxViewPort() {\n        return this._pxViewPort;\n    }\n    set pxViewPort(v) {\n        this._pxViewPort.set(v);\n        this._pxLoadPort = this.calculateLoadPort(this._pxViewPort, this._pxRequestMargin);\n        this._viewPort.zero();\n        this._loadPort.zero();\n    }\n    get pxRequestMargin() {\n        return this._pxRequestMargin;\n    }\n    set pxRequestMargin(v) {\n        this._pxRequestMargin.set(v);\n        this._pxLoadPort = this.calculateLoadPort(this._pxViewPort, this._pxRequestMargin);\n    }\n    get loadPort() {\n        return this._loadPort;\n    }\n    set loadPort(v) {\n        this._loadPort.set(v);\n        this._pxLoadPort.zero();\n    }\n    get pxLoadPort() {\n        return this._pxLoadPort;\n    }\n    set pxLoadPort(v) {\n        this._pxLoadPort.set(v);\n        this._loadPort.zero();\n    }\n    calculateLoadPort(viewPort, requestMargin) {\n        let result = viewPort.clone();\n        result.pos.subtract(requestMargin);\n        result.size.add(requestMargin.clone().multiply(2));\n        let underflow = result.pos.clone().invert().max({ x: 0, y: 0 });\n        result.pos.add(underflow);\n        result.size.subtract(underflow);\n        return result;\n    }\n};\nRequestConfig = __decorate([\n    Initable\n], RequestConfig);\nexport { RequestConfig };\n//# sourceMappingURL=RequestConfig.js.map"],"names":["CallerInternal","[object Object]","config","stream","this","_fixedLoadPort","Range2","_fixedPxLoadPort","totalCells","Vec2","totalPx","_config","_stream","fetchSubscription","ignoreFetch","requestId","v","loadPort","pxLoadPort","fixedLoadPort","fixedPxLoadPort","viewPort","equals","ignoreOngoingFetch","pxViewPort","isZero","set","zero","unsubscribe","limitPortByTotal","port","total","x","y","overflow","Rect","fromRange2","stop","subtract","max","size","CallerHandle","id","store","_force","_id","_store","BehaviorSubject","_internal","internal","requestMargin","readConfig","load","Error","undefined","forceStream","__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","DataStoreConsumable","pxScope","rows","obj","mapping","Initable","DataStoreRequestDto","sourceId","cellRequest","__metadata","k","metadata","DataRow","h","Array","pool","Poolable","Number","DataPage","_r","_pxScope","_cellSize","cellSize","initData","result","push","j","Math","min","PageStore","pageSize","retainSize","pagePxRanges","isDebug","_usePx","_dummyRect","_pagePool","Pool","_pageLookup","Dictionary","_requestedPages","_pageQueue","_cellsPerPage","_pagesPerCell","setPageSize","_retainSize","_totalPages","_totalCells","_totalPx","_pagePxRanges","totalPages","emptyPageStore","caller","hasLoadPort","hasPxLoadPort","cellRangeToPageRange","pxRangeToPageRange","first","p","has","pageRange","clone","pages","isNew","start","pos","cellSpaceToPageSpaceX","cellSpaceToPageSpaceY","pixels","Util","assert","x1","pageX1","Arr","binarySearch","el","s","y1","pageY1","x2","pageX2","y2","pageY2","fromRect","cells","rect","translate","toInt","ceil","getDataPagesForPageRange","indexX1","until","w","indexY1","indexX2","indexY2","callers","payload","partitionDataIntoPages","dataPort","forEach","insertPage","cleanPageStore","scale","shiftPageQueue","locked","calculateLockedPages","retainCount","values","reverse","reverseUntil","removePageFromQueue","page","remove","deletePageById","release","toRemove","shift","pageId","delete","data","cellPort","pageRect","pageCountY","pageY","pageCountX","pageX","dataPage","get","pagePxX","pagePxY","pagePxScope","dataStartY","dataStartX","dataLimitY","dataLimitX","pageRowNum","row","pageRow","pageColNum","removeOneByFn","unique","flatten","map","getPageIdsForViewPort","getLoadPort","loop","dataPages","getDataPages","loadRect","viewSpace","modelSpace","pageSpace","innerPageSpace","dataPageNum","modelRowCount","modelColCount","relativePageSpace","cellSpaceToInnerPageSpaceY","rowInfo","init","cellSpaceToInnerPageSpaceX","pxRangeToCellRange","getDataPagesForCellPort","getDataPagesForPxPort","DataStore","newUUID","_requestCounter","_handleCounter","_callers","_pageStore","_endPointFn","endPointFn","DEFAULT_CONFIG","force","Test","isFunction","loadPortHasChanged","limitLoadPortByTotalCells","limitPxLoadPortByTotalPx","isRequestedDataLoaded","addDataToStream","fetchData","subscribe","value","readPropertiesFromResponse","addDataToPageStore","error","cancelOngoingFetch","onDataFail","cellsPerPage","dto","createRequestDTO","pageRequest","limitPagesToLoad","pageRangeToCellRange","reason","viewPortIsAlreadyStreamed","fixLoadPort","assembleDataFromPages","calculatePxRangeFromCellRange","next","contains","startPx","stopPx","leftIndex","rightIndex","topIndex","shallowCopy","cell","RequestConfig","_viewPort","_pxViewPort","_requestMargin","_loadPort","_pxLoadPort","_pxRequestMargin","calculateLoadPort","pxRequestMargin","add","multiply","underflow","invert"],"mappings":"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"}